{"version":3,"file":"static/js/322.d686e890.chunk.js","mappings":"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","sources":["components/UserItem.js","components/reusables/IconTextDateList.js","components/UserDetail.js","pages/JuaNetwork.js","components/SpeedDial.js","sections/@dashboard/app/ServiceRequestForm.js","components/Page.js"],"sourcesContent":["import * as React from 'react';\nimport { get, head } from 'lodash';\nimport { List, ListItem, Divider, ListItemText, ListItemAvatar, Avatar, Typography } from '@mui/material';\n\nexport default function UserItem({ user, brief }) {\n  return (\n    <List sx={{ width: '100%', maxWidth: 400, bgcolor: 'background.paper' }}>\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar sx={{ color: '#2065D1' }} src={get(user, 'profile_picture')} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={get(user, 'industry')}\n          secondary={\n            <>\n              <Typography sx={{ display: 'inline' }} component=\"span\" variant=\"body2\" color=\"text.primary\">\n                {get(user, 'first_name')} {!brief && get(user, 'last_name')}\n              </Typography>\n              {brief && (\n                <>\n                  <br />— {get(user, 'bio')}\n                </>\n              )}\n            </>\n          }\n        />\n      </ListItem>\n    </List>\n  );\n}\n","import * as React from 'react';\nimport { List, ListItem, ListItemText, ListItemAvatar, Avatar, Stack } from '@mui/material';\nimport ImageIcon from '@mui/icons-material/Image';\nimport WorkIcon from '@mui/icons-material/Work';\nimport BeachAccessIcon from '@mui/icons-material/BeachAccess';\n\nexport default function IconTextDateList() {\n  return (\n    <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <ImageIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <Stack direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"center\" spacing={2}>\n          <ListItemText primary=\"TBA\" secondary=\"Jan 9, 2014 - Aug 25, 2017 \" />\n          some short disc\n        </Stack>\n      </ListItem>\n    </List>\n  );\n}\n","import * as React from 'react';\nimport { get } from 'lodash';\nimport {\n  Avatar,\n  Stack,\n  Button,\n  Dialog,\n  Divider,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@mui/material';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport UserItem from './UserItem';\nimport ServiceRequestForm from '../sections/@dashboard/app/ServiceRequestForm';\nimport IconTextDateList from './reusables/IconTextDateList';\n\nexport const UserDetail = ({ user, handleClose }) => {\n  const [open, setOpen] = React.useState(true);\n  const [scroll, setScroll] = React.useState('paper');\n  const [expanded, setExpanded] = React.useState('panel1');\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  return (\n    <div>\n      <Dialog open onClose={handleClose} scroll={scroll}>\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText id=\"scroll-dialog-description\" ref={descriptionElementRef} tabIndex={-1}>\n            <DialogTitle id=\"scroll-dialog-title\">Create Service Request</DialogTitle>\n            <UserItem user={user} />\n            <Stack direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"center\" spacing={2}>\n              <div>\n                <Divider />\n                <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\"\n                  >\n                    <Typography sx={{ width: '33%', flexShrink: 0 }}>Request</Typography>\n                    <Typography sx={{ color: 'text.secondary' }}>Advisory Session</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Typography mb={3}>\n                      By requesting the booking, you are agreeing to the Expert's hourly rate of R{' '}\n                      {get(user, 'rate_per_hour_in_rands')}.\n                    </Typography>\n                    <ServiceRequestForm serviceProvider={user} />\n                  </AccordionDetails>\n                </Accordion>\n                <Divider />\n                <Accordion disabled expanded={expanded === 'panel4'} onChange={handleChange('panel4')}>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel2bh-content\"\n                    id=\"panel2bh-header\"\n                  >\n                    <Typography sx={{ width: '33%', flexShrink: 0 }}>Reviews</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>{<IconTextDateList />}</AccordionDetails>\n                </Accordion>\n              </div>\n            </Stack>\n            <Divider />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button> |<Button disabled>Report</Button> |\n          <Button disabled>Request Service Request</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useMemo } from 'react';\nimport FeedbackIcon from '@mui/icons-material/Feedback';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ShareIcon from '@mui/icons-material/Share';\nimport BasicSpeedDial from '../components/SpeedDial';\nimport {\n  Container,\n  Typography,\n  Stack,\n  Avatar,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActionArea,\n  ImageList,\n  ImageListItem,\n  TextField,\n  MenuItem,\n  Pagination,\n  CircularProgress,\n} from '@mui/material';\nimport ReactGA from 'react-ga';\nimport { doc, getDoc, collection, query, where, onSnapshot } from 'firebase/firestore';\nimport { db } from '../actions/firebase'; // Adjust the path to your firebase.js config\nimport notificationManager from '../actions/NotificationManager';\nimport { UserDetail } from '../components/UserDetail';\nimport Page from '../components/Page';\n\nconst ITEMS_PER_PAGE = 6;\n\nexport default function JuaNetwork() {\n  const [users, setUsers] = useState([]);\n  const navigate = useNavigate();\n  const [industryFilter, setIndustryFilter] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [page, setPage] = useState(1);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [openUserDetailView, setOpenUserDetailView] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const q = query(\n      collection(db, 'users'),\n      where('profile_visible', '==', true),\n      where('is_service_provider', '==', true)\n    );\n\n    const unsubscribe = onSnapshot(\n      q,\n      snapshot => {\n        const updatedUsers = snapshot.docs.map(doc => ({\n          ...doc.data(),\n          ref: doc.id,\n        }));\n        setUsers(updatedUsers);\n        setLoading(false);\n      },\n      error => {\n        notificationManager.error('Failed to listen to network users', 'Error');\n        setLoading(false);\n      }\n    );\n\n    return () => unsubscribe(); // cleanup listener on unmount\n  }, []);\n\n  const filteredIndustries = useMemo(() => {\n    const uniqueIndustries = [...new Set(users.map(u => u.industry))];\n    return uniqueIndustries.sort();\n  }, [users]);\n\n  const filteredUsers = useMemo(() => {\n    let list = users;\n    if (industryFilter) {\n      list = list.filter(u => u.industry === industryFilter);\n    }\n    if (searchTerm) {\n      list = list.filter(u =>\n        `${u.first_name} ${u.last_name} ${u.bio || ''}`.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n    return list;\n  }, [users, industryFilter, searchTerm]);\n\n  const paginatedUsers = useMemo(() => {\n    const start = (page - 1) * ITEMS_PER_PAGE;\n    return filteredUsers.slice(start, start + ITEMS_PER_PAGE);\n  }, [filteredUsers, page]);\n\n  const onClickJuaNetworkUser = async ref => {\n    try {\n      const snap = await getDoc(doc(db, 'users', ref));\n      if (snap.exists()) {\n        setSelectedUser({ ...snap.data(), ref: snap.id });\n        setOpenUserDetailView(true);\n        ReactGA.event({\n          value: 1,\n          category: `Profile view: ${ref}`,\n          action: 'Clicked on service provider profile',\n        });\n      }\n    } catch (err) {\n      notificationManager.error('Could not load user details', 'Error');\n    }\n  };\n\n  const closeUserDetailView = () => setOpenUserDetailView(false);\n\n  const handleIndustryChange = e => {\n    setIndustryFilter(e.target.value);\n    setPage(1);\n  };\n\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n    setPage(1);\n  };\n\n  return (\n    <Page title=\"Jua Network\">\n      <Container maxWidth=\"xl\">\n        <Typography variant=\"h4\" sx={{ mb: 5 }}>\n          Jua Network\n        </Typography>\n\n        {loading ? (\n          <CircularProgress sx={{ mx: 'auto', display: 'block' }} />\n        ) : (\n          <>\n            <Stack direction=\"row\" spacing={2} sx={{ mb: 3 }}>\n              <TextField\n                select\n                label=\"Filter by Industry\"\n                value={industryFilter}\n                onChange={handleIndustryChange}\n                sx={{ minWidth: 220 }}\n              >\n                <MenuItem value=\"\">All Industries</MenuItem>\n                {filteredIndustries.map(industry => (\n                  <MenuItem key={industry} value={industry}>\n                    {industry}\n                  </MenuItem>\n                ))}\n              </TextField>\n\n              <TextField\n                label=\"Search\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n                placeholder=\"Search name or bio...\"\n                sx={{ flex: 1 }}\n              />\n            </Stack>\n\n            <ImageList\n              sx={{\n                gridAutoFlow: 'row',\n                gridTemplateColumns: 'repeat(auto-fill,minmax(250px,1fr)) !important',\n              }}\n            >\n              {paginatedUsers.map(advisor => (\n                <Card\n                  key={advisor.ref}\n                  sx={{ width: 350, maxWidth: 350 }}\n                  onClick={() => onClickJuaNetworkUser(advisor.ref)}\n                >\n                  <ImageListItem>\n                    <CardActionArea>\n                      <CardMedia component=\"div\" sx={{ objectFit: 'contain', background: '#004aad', height: 20 }} />\n                      <Avatar\n                        src={advisor.profile_picture}\n                        sx={{ color: '#2065D1', position: 'relative', left: '20px', top: '15px' }}\n                      />\n                      <CardContent>\n                        <Typography gutterBottom variant=\"h5\">\n                          {advisor.first_name} {advisor.last_name}\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"text.secondary\"\n                          sx={{\n                            textOverflow: 'ellipsis',\n                            overflow: 'hidden',\n                            whiteSpace: 'nowrap',\n                          }}\n                        >\n                          {advisor.bio}\n                        </Typography>\n                      </CardContent>\n                    </CardActionArea>\n                  </ImageListItem>\n                </Card>\n              ))}\n            </ImageList>\n\n            {filteredUsers.length > ITEMS_PER_PAGE && (\n              <Pagination\n                count={Math.ceil(filteredUsers.length / ITEMS_PER_PAGE)}\n                page={page}\n                onChange={(_, value) => setPage(value)}\n                sx={{ mt: 4, display: 'flex', justifyContent: 'center' }}\n              />\n            )}\n          </>\n        )}\n\n        {openUserDetailView && <UserDetail user={selectedUser} handleClose={closeUserDetailView} />}\n        <BasicSpeedDial\n          actions={[\n            {\n              icon: <FeedbackIcon />,\n              name: 'Feedback',\n              onClick: () => navigate(`/dashboard/about`, { replace: true }),\n            },\n            {\n              icon: <ShareIcon />,\n              name: 'Share',\n              onClick: () => navigator.share({ title: 'JUA', text: 'Join JUA today!', url: 'https://jua.one' }),\n            },\n          ]}\n        />\n      </Container>\n    </Page>\n  );\n}\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, SpeedDial, SpeedDialIcon, SpeedDialAction } from '@mui/material';\n\nexport default function BasicSpeedDial({ actions, customSpeedDialIcon }) {\n  return (\n    <Box sx={{ bottom: 10, right: 10, position: 'fixed', transform: 'translateZ(0px)', flexGrow: 1 }}>\n      <SpeedDial\n        ariaLabel=\"SpeedDial basic example\"\n        sx={{ position: 'absolute', bottom: 16, right: 16 }}\n        icon={customSpeedDialIcon || <SpeedDialIcon />}\n      >\n        {actions.map(action => (\n          <SpeedDialAction onClick={action.onClick} key={action.name} icon={action.icon} tooltipTitle={action.name} />\n        ))}\n      </SpeedDial>\n    </Box>\n  );\n}\n","// File: src/sections/@dashboard/app/ServiceRequestForm.js\nimport { useEffect, useState } from 'react';\nimport { get } from 'lodash';\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Stack,\n  TextField,\n  Snackbar,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Alert,\n} from '@mui/material';\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport { LoadingButton } from '@mui/lab';\nimport { doc, addDoc, updateDoc, collection, serverTimestamp } from 'firebase/firestore';\nimport notificationManager from '../../../actions/NotificationManager';\nimport { auth, db } from '../../../actions/firebase';\n\nexport default function ServiceRequestForm({\n  closeDialog,\n  serviceRequest,\n  serviceProvider,\n  isServiceProvider = false,\n}) {\n  const navigate = useNavigate();\n  const formProps = useForm({ defaultValues: serviceRequest || {} });\n  const { register, setValue, handleSubmit } = formProps;\n  const [date, setDate] = useState(\n    get(serviceRequest, 'date_and_time') ? new Date(get(serviceRequest, 'date_and_time')) : null\n  );\n  const [submissionLoading, setSubmissionLoading] = useState(false);\n  const [openSuccess, setOpenSuccess] = useState(false);\n  const [actionDialog, setActionDialog] = useState(null);\n  const [actionReason, setActionReason] = useState('');\n\n  useEffect(() => {\n    if (serviceProvider) {\n      setValue('serviceProvider', serviceProvider.ref || serviceProvider.id);\n    }\n  }, [serviceProvider, setValue]);\n\n  const isFinalized = serviceRequest?.status === 'Accepted' || serviceRequest?.status === 'Cancelled';\n\n  const handleDateTimeChange = newDate => {\n    setDate(newDate?.toDate ? newDate.toDate() : newDate);\n    setValue('date_and_time', newDate?.toDate ? newDate.toDate() : newDate);\n  };\n\n  const onSubmit = async values => {\n    if (isFinalized) return;\n    try {\n      setSubmissionLoading(true);\n\n      ReactGA.event({\n        value: 1,\n        category: 'Service Requests',\n        action: serviceRequest ? 'Service Request updated' : 'Service Request created',\n      });\n\n      const user = auth.currentUser;\n      if (!user) {\n        notificationManager.error('User is not authenticated.', 'Error');\n        return;\n      }\n\n      if (!values.serviceProvider) {\n        notificationManager.error('Service Provider is required.', 'Error');\n        return;\n      }\n\n      if (!date) {\n        notificationManager.error('Please select a valid date and time.', 'Error');\n        return;\n      }\n\n      const safeDate = date.toDate ? date.toDate() : date;\n\n      if (serviceRequest?.id) {\n        const requestRef = doc(db, 'serviceRequests', serviceRequest.id);\n        await updateDoc(requestRef, {\n          ...values,\n          date_and_time: safeDate,\n          updatedAt: serverTimestamp(),\n        });\n      } else {\n        const requestsCollection = collection(db, 'serviceRequests');\n        const requestDoc = await addDoc(requestsCollection, {\n          ...values,\n          date_and_time: safeDate,\n          createdAt: serverTimestamp(),\n          status: 'Pending',\n          customer: user.uid,\n        });\n\n        const userNotifRef = collection(db, 'users', user.uid, 'notifications');\n        await addDoc(userNotifRef, {\n          title: 'Service Request Created',\n          message: 'Your new service request has been submitted.',\n          type: 'service_request',\n          createdAt: serverTimestamp(),\n          read: false,\n        });\n\n        const providerNotifRef = collection(db, 'users', values.serviceProvider, 'notifications');\n        await addDoc(providerNotifRef, {\n          title: 'New Service Request',\n          message: `${user.displayName || 'A user'} has sent you a new service request.`,\n          type: 'service_request',\n          createdAt: serverTimestamp(),\n          read: false,\n        });\n      }\n\n      setOpenSuccess(true);\n      closeDialog?.();\n    } catch (error) {\n      notificationManager.error('Something went wrong while submitting the request.', 'Error');\n    } finally {\n      setSubmissionLoading(false);\n    }\n  };\n\n  const handleAction = async status => {\n    try {\n      const user = auth.currentUser;\n      const requestRef = doc(db, 'serviceRequests', serviceRequest.id);\n      await updateDoc(requestRef, {\n        status,\n        ...(actionReason && { reason: actionReason }),\n        statusUpdatedAt: serverTimestamp(),\n        statusUpdatedBy: user?.uid || null,\n        updatedAt: serverTimestamp(),\n      });\n      // Log action to serviceRequests/{id}/logs\n      const logRef = collection(db, 'serviceRequests', serviceRequest.id, 'logs');\n      await addDoc(logRef, {\n        action: status,\n        message: actionReason || `Status changed to ${status}`,\n        performedBy: user?.uid || null,\n        performedAt: serverTimestamp(),\n      });\n\n      const recipient = status === 'Cancelled' ? serviceRequest.serviceProvider : serviceRequest.customer;\n      const notifRef = collection(db, 'users', recipient, 'notifications');\n      await addDoc(notifRef, {\n        title: `Service Request ${status}`,\n        message: actionReason || `The request was ${status.toLowerCase()}.`,\n        type: 'service_request',\n        createdAt: serverTimestamp(),\n        read: false,\n      });\n\n      setActionDialog(null);\n      setActionReason('');\n      notificationManager.success(`Request ${status.toLowerCase()} successfully`, 'Success');\n    } catch (error) {\n      notificationManager.error('Failed to process the request.', 'Error');\n    }\n  };\n\n  return (\n    <>\n      {isFinalized && (\n        <Alert severity=\"info\" sx={{ mb: 2 }}>\n          This request has been <strong>{serviceRequest?.status}</strong>\n          {serviceRequest?.reason ? ` — ${serviceRequest.reason}` : ''}\n          {serviceRequest?.statusUpdatedAt?.toDate && (\n            <>\n              {' '}\n              on <strong>{moment(serviceRequest.statusUpdatedAt.toDate()).format('lll')}</strong>\n            </>\n          )}\n          {serviceRequest?.statusUpdatedBy && (\n            <>\n              {' '}\n              by <strong>{serviceRequest.statusUpdatedBy === serviceRequest.customer ? 'customer' : 'provider'}</strong>\n            </>\n          )}\n          .\n        </Alert>\n      )}\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            required\n            label=\"Subject\"\n            disabled={isFinalized}\n            {...register('subject', { required: 'Subject is required' })}\n          />\n\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"en-za\">\n            <DateTimePicker\n              label=\"Ideal date and time for service request\"\n              required\n              disabled={isFinalized}\n              value={date}\n              onChange={handleDateTimeChange}\n              renderInput={params => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n\n          <TextField fullWidth label=\"Description (optional)\" disabled={isFinalized} {...register('description')} />\n\n          <LoadingButton\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            loading={submissionLoading}\n            variant=\"contained\"\n            disabled={isFinalized}\n          >\n            {serviceRequest?.id ? 'Update Request' : 'Send Request'}\n          </LoadingButton>\n\n          {serviceRequest?.id &&\n            !isFinalized &&\n            (isServiceProvider ? (\n              <Stack direction=\"row\" spacing={2}>\n                <Button color=\"success\" variant=\"outlined\" onClick={() => setActionDialog('Accepted')}>\n                  Approve\n                </Button>\n                <Button color=\"error\" variant=\"outlined\" onClick={() => setActionDialog('Cancelled')}>\n                  Cancel\n                </Button>\n              </Stack>\n            ) : (\n              <Button color=\"error\" variant=\"outlined\" onClick={() => setActionDialog('Cancelled')}>\n                Cancel Request\n              </Button>\n            ))}\n        </Stack>\n      </form>\n\n      <Dialog open={!!actionDialog} onClose={() => setActionDialog(null)}>\n        <DialogTitle>{actionDialog} Service Request</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {actionDialog === 'Cancelled'\n              ? 'Please provide a reason for cancelling this request.'\n              : 'You are about to approve this request.'}\n          </DialogContentText>\n          {actionDialog === 'Cancelled' && (\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"Reason\"\n              fullWidth\n              variant=\"standard\"\n              value={actionReason}\n              onChange={e => setActionReason(e.target.value)}\n            />\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setActionDialog(null)}>Close</Button>\n          <Button onClick={() => handleAction(actionDialog)} variant=\"contained\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Snackbar\n        open={openSuccess}\n        autoHideDuration={4000}\n        onClose={() => setOpenSuccess(false)}\n        message=\"Service request submitted successfully\"\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport ArrowBackIosRoundedIcon from '@mui/icons-material/ArrowBackIosRounded';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', showGoBackArrow = false, meta, ...other }, ref) => (\n  <>\n    <Helmet>\n      <title>{`${title} | JUA`}</title>\n      {meta}\n    </Helmet>\n\n    <Box ref={ref} {...other}>\n      {showGoBackArrow && (\n        <ArrowBackIosRoundedIcon\n          onClick={() => window.history.go(-1)}\n          sx={{\n            top: 40,\n            left: 20,\n            cursor: 'pointer',\n            position: 'relative',\n          }}\n        />\n      )}\n      {children}\n    </Box>\n  </>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n  meta: PropTypes.node,\n};\n\nexport default Page;\n"],"names":["UserItem","_ref","user","brief","_jsx","List","sx","width","maxWidth","bgcolor","children","_jsxs","ListItem","alignItems","ListItemAvatar","Avatar","color","src","get","ListItemText","primary","secondary","_Fragment","Typography","display","component","variant","IconTextDateList","ImageIcon","Stack","direction","justifyContent","spacing","UserDetail","handleClose","open","setOpen","React","scroll","setScroll","expanded","setExpanded","handleChange","panel","event","isExpanded","descriptionElementRef","current","descriptionElement","focus","Dialog","onClose","DialogContent","dividers","DialogContentText","id","ref","tabIndex","DialogTitle","Divider","Accordion","onChange","AccordionSummary","expandIcon","ExpandMoreIcon","flexShrink","AccordionDetails","mb","ServiceRequestForm","serviceProvider","disabled","DialogActions","Button","onClick","ITEMS_PER_PAGE","JuaNetwork","users","setUsers","useState","navigate","useNavigate","industryFilter","setIndustryFilter","searchTerm","setSearchTerm","page","setPage","selectedUser","setSelectedUser","openUserDetailView","setOpenUserDetailView","loading","setLoading","useEffect","q","query","collection","db","where","unsubscribe","onSnapshot","snapshot","updatedUsers","docs","map","doc","_objectSpread","data","error","notificationManager","filteredIndustries","useMemo","Set","u","industry","sort","filteredUsers","list","filter","concat","first_name","last_name","bio","toLowerCase","includes","paginatedUsers","start","slice","Page","title","Container","CircularProgress","mx","TextField","select","label","value","e","target","minWidth","MenuItem","placeholder","flex","ImageList","gridAutoFlow","gridTemplateColumns","advisor","Card","async","snap","getDoc","exists","ReactGA","category","action","err","onClickJuaNetworkUser","ImageListItem","CardActionArea","CardMedia","objectFit","background","height","profile_picture","position","left","top","CardContent","gutterBottom","textOverflow","overflow","whiteSpace","length","Pagination","count","Math","ceil","_","mt","closeUserDetailView","BasicSpeedDial","actions","icon","FeedbackIcon","name","replace","ShareIcon","navigator","share","text","url","customSpeedDialIcon","Box","bottom","right","transform","flexGrow","SpeedDial","ariaLabel","SpeedDialIcon","SpeedDialAction","tooltipTitle","_serviceRequest$statu","closeDialog","serviceRequest","isServiceProvider","formProps","useForm","defaultValues","register","setValue","handleSubmit","date","setDate","Date","submissionLoading","setSubmissionLoading","openSuccess","setOpenSuccess","actionDialog","setActionDialog","actionReason","setActionReason","isFinalized","status","Alert","severity","reason","statusUpdatedAt","toDate","moment","format","statusUpdatedBy","customer","onSubmit","auth","currentUser","values","safeDate","requestRef","updateDoc","date_and_time","updatedAt","serverTimestamp","requestsCollection","userNotifRef","addDoc","createdAt","uid","message","type","read","providerNotifRef","displayName","fullWidth","required","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DateTimePicker","newDate","renderInput","params","LoadingButton","size","autoFocus","margin","logRef","performedBy","performedAt","recipient","notifRef","success","handleAction","Snackbar","autoHideDuration","forwardRef","showGoBackArrow","meta","other","_objectWithoutProperties","_excluded","Helmet","ArrowBackIosRoundedIcon","window","history","go","cursor","propTypes","PropTypes","isRequired"],"sourceRoot":""}