{"version":3,"file":"static/js/423.2bfe7a45.chunk.js","mappings":";uOAgBA,MAAMA,EAAY,iDACZC,EAAqB,kDAE3B,SAASC,EAGPC,EACAC,GAEA,MAAMC,EAAqC,CAAC,EAC5C,IAAK,MAAMC,KAAOH,EACZA,EAAEI,eAAeD,KACnBD,EAAOC,GAAOF,EAAED,EAAEG,KAGtB,OAAOD,CACT,CAQM,SAAUG,EAAOC,GACrB,GAAY,MAARA,EACF,OAAO,KAKT,GAHIA,aAAgBC,SAClBD,EAAOA,EAAKE,WAEM,kBAATF,GAAqBG,SAASH,GAGvC,OAAOA,EAET,IAAa,IAATA,IAA0B,IAATA,EACnB,OAAOA,EAET,GAA6C,oBAAzCI,OAAOC,UAAUC,SAASC,KAAKP,GACjC,OAAOA,EAET,GAAIA,aAAgBQ,KAClB,OAAOR,EAAKS,cAEd,GAAIC,MAAMC,QAAQX,GAChB,OAAOA,EAAKY,KAAIC,GAAKd,EAAOc,KAE9B,GAAoB,oBAATb,GAAuC,kBAATA,EACvC,OAAOP,EAAUO,GAAOa,GAAKd,EAAOc,KAGtC,MAAM,IAAIC,MAAM,mCAAqCd,EACvD,CAQM,SAAUe,EAAOC,GACrB,GAAY,MAARA,EACF,OAAOA,EAET,GAAKA,EAAoC,SACvC,OAASA,EAAoC,UAC3C,KAAKzB,EAEL,KAAKC,EAAoB,CAIvB,MAAMyB,EAAQhB,OAAQe,EAA2C,OACjE,GAAIE,MAAMD,GACR,MAAM,IAAIH,MAAM,qCAAuCE,GAEzD,OAAOC,EAET,QACE,MAAM,IAAIH,MAAM,qCAAuCE,GAI7D,OAAIN,MAAMC,QAAQK,GACTA,EAAKJ,KAAIC,GAAKE,EAAOF,KAEV,oBAATG,GAAuC,kBAATA,EAChCvB,EAAUuB,GAAOH,GAAKE,EAAOF,KAG/BG,CACT,CCxFO,MAAMG,EAAiB,YCUxBC,EAAuD,CAC3DC,GAAI,KACJC,UAAW,YACXC,QAAS,UACTC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,UAAW,YACXC,eAAgB,iBAChBC,kBAAmB,oBACnBC,gBAAiB,kBACjBC,mBAAoB,qBACpBC,oBAAqB,sBACrBC,QAAS,UACTC,aAAc,eACdC,cAAe,gBACfC,SAAU,WACVC,YAAa,cACbC,UAAW,aAUP,MAAOC,UAAuBC,EAAAA,EAIlCC,WAAAA,CAKEC,EACAC,EAISC,GAETC,MAAM,GAADC,OAAI1B,EAAc,KAAA0B,OAAIJ,GAAQC,GAAW,IAFrC,KAAOC,QAAPA,EAMTvC,OAAO0C,eAAeC,KAAMT,EAAejC,YAmD/B,SAAA2C,EACdC,EACAC,GAEA,IAKIP,EALAF,EA3CN,SAA2BQ,GAEzB,GAAIA,GAAU,KAAOA,EAAS,IAC5B,MAAO,KAET,OAAQA,GACN,KAAK,EAiBL,KAAK,IACH,MAAO,WAfT,KAAK,IACH,MAAO,mBACT,KAAK,IACH,MAAO,kBACT,KAAK,IACH,MAAO,oBACT,KAAK,IACH,MAAO,YACT,KAAK,IACH,MAAO,UACT,KAAK,IACH,MAAO,qBACT,KAAK,IACH,MAAO,YAGT,KAAK,IACH,MAAO,gBACT,KAAK,IACH,MAAO,cACT,KAAK,IACH,MAAO,oBAGX,MAAO,SACT,CASaE,CAAkBF,GAGzBG,EAAsBX,EAK1B,IACE,MAAMY,EAAYH,GAAYA,EAASI,MACvC,GAAID,EAAW,CACb,MAAMJ,EAASI,EAAUJ,OACzB,GAAsB,kBAAXA,EAAqB,CAC9B,IAAK7B,EAAa6B,GAEhB,OAAO,IAAIX,EAAe,WAAY,YAExCG,EAAOrB,EAAa6B,GAIpBG,EAAcH,EAGhB,MAAMP,EAAUW,EAAUX,QACH,kBAAZA,IACTU,EAAcV,GAGhBC,EAAUU,EAAUV,aACJY,IAAZZ,IACFA,EAAU5B,EAAO4B,KAGrB,MAAOa,IAIT,MAAa,OAATf,EAIK,KAGF,IAAIH,EAAeG,EAAMW,EAAaT,EAC/C,OCpIac,EAKXjB,WAAAA,CACWkB,EACTC,EACAC,EACAC,GAHS,KAAGH,IAAHA,EALH,KAAII,KAAgC,KACpC,KAASC,UAA6B,KACtC,KAAQC,SAAoC,KAC5C,KAAsBC,uBAAkB,MAO1CC,EAAAA,EAAAA,IAAqBR,IAAQA,EAAIS,SAASC,gBAC5CrB,KAAKkB,uBAAyBP,EAAIS,SAASC,eAE7CrB,KAAKe,KAAOH,EAAaU,aAAa,CAAEC,UAAU,IAClDvB,KAAKgB,UAAYH,EAAkBS,aAAa,CAC9CC,UAAU,IAGPvB,KAAKe,MACRH,EAAaY,MAAMC,MACjBV,GAASf,KAAKe,KAAOA,IACrB,SAMCf,KAAKgB,WACRH,EAAkBW,MAAMC,MACtBT,GAAchB,KAAKgB,UAAYA,IAC/B,SAMChB,KAAKiB,UACQ,OAAhBH,QAAA,IAAAA,GAAAA,EAAkBU,MAAMC,MACtBR,GAAajB,KAAKiB,SAAWA,IAC7B,SAON,kBAAMS,GACJ,GAAK1B,KAAKe,KAIV,IACE,MAAMY,QAAc3B,KAAKe,KAAKa,WAC9B,OAAO,OAAAD,QAAK,IAALA,OAAK,EAALA,EAAOE,YACd,MAAOpB,GAEP,QAIJ,uBAAMqB,GACJ,GACG9B,KAAKgB,WACJ,iBAAkBe,MACQ,YAA5BC,aAAaC,WAKf,IACE,aAAajC,KAAKgB,UAAUY,WAC5B,MAAOnB,GAKP,QAIJ,sBAAMyB,CACJC,GAEA,GAAInC,KAAKkB,uBACP,OAAOlB,KAAKkB,uBAEd,GAAIlB,KAAKiB,SAAU,CACjB,MAAMpE,EAASsF,QACLnC,KAAKiB,SAASmB,2BACdpC,KAAKiB,SAASW,WACxB,OAAI/E,EAAO0D,MAIF,KAEF1D,EAAO8E,MAEhB,OAAO,KAGT,gBAAMU,CAAWF,GAIf,MAAO,CAAEG,gBAHetC,KAAK0B,eAGTa,qBAFSvC,KAAK8B,oBAEET,oBADRrB,KAAKkC,iBAAiBC,KCjH/C,MAAMK,EAAiB,cAExBC,EAAiB,6BA0DVC,EAYXjD,WAAAA,CACWkB,EACTC,EACAC,EACAC,GAE8D,IAD9D6B,EAAAC,UAAAC,OAAA,QAAArC,IAAAoC,UAAA,GAAAA,UAAA,GAA+BJ,EACtBM,EAAAF,UAAAC,OAAA,QAAArC,IAAAoC,UAAA,GAAAA,UAAA,GAA0B,kBAAaG,SAAMH,UAAQ,EALrD,KAAGjC,IAAHA,EAKA,KAASmC,UAATA,EAhBX,KAAcE,eAAkB,KAkB9BhD,KAAKiD,gBAAkB,IAAIvC,EACzBC,EACAC,EACAC,EACAC,GAGFd,KAAKkD,kBAAoB,IAAIC,SAAQC,IACnCpD,KAAKqD,cAAgB,IACZF,QAAQC,QAAQA,IACxB,IAIH,IACE,MAAME,EAAM,IAAIC,IAAIZ,GACpB3C,KAAKwD,aACHF,EAAIG,QAA2B,MAAjBH,EAAII,SAAmB,GAAKJ,EAAII,UAChD1D,KAAK2D,OAASnB,EACd,MAAO/B,GACPT,KAAKwD,aAAe,KACpBxD,KAAK2D,OAAShB,GAIlBiB,OAAAA,GACE,OAAO5D,KAAKqD,gBAQdQ,IAAAA,CAAKC,GACH,MAAMC,EAAY/D,KAAKW,IAAIqD,QAAQD,UACnC,GAA4B,OAAxB/D,KAAKgD,eAAyB,CAChC,MAAMS,EAASzD,KAAKgD,eACpB,MAAO,GAAPlD,OAAU2D,EAAM,KAAA3D,OAAIiE,EAAS,KAAAjE,OAAIE,KAAK2D,OAAM,KAAA7D,OAAIgE,GAGlD,OAA0B,OAAtB9D,KAAKwD,aACA,GAAP1D,OAAUE,KAAKwD,aAAY,KAAA1D,OAAIgE,GAG1B,WAAPhE,OAAkBE,KAAK2D,OAAM,KAAA7D,OAAIiE,EAAS,wBAAAjE,OAAuBgE,aAkCrDG,EACdC,EACAJ,EACAE,GAEA,MAAMG,EACJlH,GAuHJ,SACEiH,EACAJ,EACA7G,EACA+G,GAEA,MAAMV,EAAMY,EAAkBL,KAAKC,GACnC,OAAOM,EAAUF,EAAmBZ,EAAKrG,EAAM+G,EACjD,CA7HWxG,CAAK0G,EAAmBJ,EAAM7G,EAAM+G,GAAW,CAAC,GAUzD,OAPAG,EAASE,OAAS,CAChBpH,EACA+G,IAkMJ,SACEE,EACAJ,EACA7G,EACA+G,GAEA,MAAMV,EAAMY,EAAkBL,KAAKC,GACnC,OAAOQ,EAAYJ,EAAmBZ,EAAKrG,EAAM+G,GAAW,CAAC,EAC/D,CAxMWK,CAAOH,EAAmBJ,EAAM7G,EAAM+G,GAGxCG,CACT,CAsCAI,eAAeC,EACblB,EACAmB,EACAC,EACA5B,GAIA,IAAI6B,EAFJD,EAAQ,gBAAkB,mBAG1B,IACEC,QAAiB7B,EAAUQ,EAAK,CAC9BsB,OAAQ,OACRH,KAAMI,KAAKC,UAAUL,GACrBC,YAEF,MAAOjE,GAKP,MAAO,CACLP,OAAQ,EACRjC,KAAM,MAGV,IAAIA,EAAgC,KACpC,IACEA,QAAa0G,EAAS1G,OACtB,MAAOwC,IAGT,MAAO,CACLP,OAAQyE,EAASzE,OACjBjC,OAEJ,CAQAsG,eAAeQ,EACbb,EACAF,GAEA,MAAMU,EAAkC,CAAC,EACnCM,QAAgBd,EAAkBjB,gBAAgBZ,WACtD2B,EAAQ7B,0BAWV,OATI6C,EAAQ1C,YACVoC,EAAuB,cAAI,UAAYM,EAAQ1C,WAE7C0C,EAAQzC,iBACVmC,EAAQ,8BAAgCM,EAAQzC,gBAEpB,OAA1ByC,EAAQ3D,gBACVqD,EAAQ,uBAAyBM,EAAQ3D,eAEpCqD,CACT,CAsBAH,eAAeH,EACbF,EACAZ,EACArG,EACA+G,GAIA,MAAMS,EAAO,CAAExH,KADfA,EAAOD,EAAOC,IAIRyH,QAAgBK,EAAgBb,EAAmBF,GAKnDiB,EAtRR,SAAmBC,GAIjB,IAAIC,EAAoB,KACxB,MAAO,CACLC,QAAS,IAAIjC,SAAQ,CAACkC,EAAGC,KACvBH,EAAQI,YAAW,KACjBD,EAAO,IAAI/F,EAAe,oBAAqB,qBAAqB,GACnE2F,EAAO,IAEZM,OAAQA,KACFL,GACFM,aAAaN,IAIrB,CAqQ0BO,CAFR1B,EAAQ2B,SAAW,KAG7BhB,QAAiBxB,QAAQyC,KAAK,CAClCpB,EAASlB,EAAKmB,EAAMC,EAASR,EAAkBpB,WAC/CmC,EAAgBG,QAChBlB,EAAkBhB,oBAOpB,GAHA+B,EAAgBO,UAGXb,EACH,MAAM,IAAIpF,EACR,YACA,4CAKJ,MAAMgB,EAAQN,EAAkB0E,EAASzE,OAAQyE,EAAS1G,MAC1D,GAAIsC,EACF,MAAMA,EAGR,IAAKoE,EAAS1G,KACZ,MAAM,IAAIsB,EAAe,WAAY,sCAGvC,IAAIsG,EAAelB,EAAS1G,KAAKhB,KAMjC,GAH4B,qBAAjB4I,IACTA,EAAelB,EAAS1G,KAAKpB,QAEH,qBAAjBgJ,EAET,MAAM,IAAItG,EAAe,WAAY,mCAMvC,MAAO,CAAEtC,KAFWe,EAAO6H,GAG7B,CAwBAtB,eAAeD,EACbJ,EACAZ,EACArG,EACA+G,SAIA,MAAMS,EAAO,CAAExH,KADfA,EAAOD,EAAOC,IAIRyH,QAAgBK,EAAgBb,EAAmBF,GAIzD,IAAIW,EA2CAmB,EACAC,EA/CJrB,EAAQ,gBAAkB,mBAC1BA,EAAgB,OAAI,oBAGpB,IACEC,QAAiBT,EAAkBpB,UAAUQ,EAAK,CAChDsB,OAAQ,OACRH,KAAMI,KAAKC,UAAUL,GACrBC,UACAsB,OAAe,OAAPhC,QAAA,IAAAA,OAAA,EAAAA,EAASgC,SAEnB,MAAOvF,GACP,GAAIA,aAAa1C,OAAoB,eAAX0C,EAAEqD,KAAuB,CACjD,MAAMvD,EAAQ,IAAIhB,EAAe,YAAa,0BAC9C,MAAO,CACLtC,KAAMkG,QAAQmC,OAAO/E,GACrB8D,OAAQ,CACN,CAAC4B,OAAOC,eAAc,KACb,CACLC,KAAIA,IACKhD,QAAQmC,OAAO/E,OAWlC,MAAMA,EAAQN,EAAkB,EAAG,MACnC,MAAO,CACLhD,KAAMkG,QAAQmC,OAAO/E,GAErB8D,OAAQ,CACN,CAAC4B,OAAOC,eAAc,KACb,CACLC,KAAIA,IACKhD,QAAQmC,OAAO/E,OASlC,MAAM6F,EAAgB,IAAIjD,SAAiB,CAACC,EAASkC,KACnDQ,EAAiB1C,EACjB2C,EAAiBT,CAAM,IAEV,QAAfe,EAAO,OAAPrC,QAAO,IAAPA,OAAO,EAAPA,EAASgC,cAAM,IAAAK,GAAAA,EAAEC,iBAAiB,SAAS,KACzC,MAAM/F,EAAQ,IAAIhB,EAAe,YAAa,0BAC9CwG,EAAexF,EAAM,IAEvB,MACMgG,EAyCR,SACEC,EACAV,EACAC,EACAC,GAEA,MAAMS,EAAcA,CAClBC,EACAC,KAEA,MAAMC,EAAQF,EAAKE,MAAMnE,GAEzB,IAAKmE,EACH,OAEF,MAAM3J,EAAO2J,EAAM,GACnB,IACE,MAAMC,EAAWhC,KAAKiC,MAAM7J,GAC5B,GAAI,WAAY4J,EAEd,YADAf,EAAe9H,EAAO6I,EAAShK,SAGjC,GAAI,YAAagK,EAEf,YADAF,EAAWI,QAAQ/I,EAAO6I,EAASlH,UAGrC,GAAI,UAAWkH,EAAU,CACvB,MAAMtG,EAAQN,EAAkB,EAAG4G,GAGnC,OAFAF,EAAWpG,MAAMA,QACjBwF,EAAexF,IAGjB,MAAOA,GACP,GAAIA,aAAiBhB,EAGnB,OAFAoH,EAAWpG,MAAMA,QACjBwF,EAAexF,KAOfyG,EAAU,IAAIC,YACpB,OAAO,IAAIC,eAAe,CACxBC,KAAAA,CAAMR,GACJ,IAAIS,EAAc,GAClB,OAAOC,IACP9C,eAAe8C,IACb,GAAU,OAANrB,QAAM,IAANA,OAAM,EAANA,EAAQsB,QAAS,CACnB,MAAM/G,EAAQ,IAAIhB,EAChB,YACA,yBAIF,OAFAoH,EAAWpG,MAAMA,GACjBwF,EAAexF,GACR4C,QAAQC,UAEjB,IACE,MAAM,MAAElF,EAAK,KAAEqJ,SAAef,EAAOgB,OACrC,GAAID,EAKF,OAJIH,EAAYK,QACdhB,EAAYW,EAAYK,OAAQd,QAElCA,EAAWe,QAGb,GAAU,OAAN1B,QAAM,IAANA,OAAM,EAANA,EAAQsB,QAAS,CACnB,MAAM/G,EAAQ,IAAIhB,EAChB,YACA,yBAKF,OAHAoH,EAAWpG,MAAMA,GACjBwF,EAAexF,cACTiG,EAAOhB,SAGf4B,GAAeJ,EAAQhJ,OAAOE,EAAO,CAAEmG,QAAQ,IAC/C,MAAMsD,EAAQP,EAAYQ,MAAM,MAChCR,EAAcO,EAAME,OAAS,GAC7B,IAAK,MAAMnB,KAAQiB,EACbjB,EAAKe,QACPhB,EAAYC,EAAKe,OAAQd,GAG7B,OAAOU,IACP,MAAO9G,GACP,MAAMuH,EACJvH,aAAiBhB,EACbgB,EACAN,EAAkB,EAAG,MAC3B0G,EAAWpG,MAAMuH,GACjB/B,EAAe+B,MAIrBtC,OAAMA,IACGgB,EAAOhB,UAGpB,CA5IkBuC,CADDpD,EAASF,KAAMuD,YAG5BlC,EACAC,EACO,OAAP/B,QAAO,IAAPA,OAAO,EAAPA,EAASgC,QAEX,MAAO,CACL3B,OAAQ,CACN,CAAC4B,OAAOC,iBACN,MAAM+B,EAAU1B,EAAQyB,YACxB,MAAO,CACL,UAAM7B,GACJ,MAAM,MAAEjI,EAAK,KAAEqJ,SAAeU,EAAQT,OACtC,MAAO,CAAEtJ,MAAOA,EAAkBqJ,SAEpChD,OAAY2D,gBACJD,EAAQzC,SACP,CAAE+B,MAAM,EAAMrJ,WAAOsC,OAKpCvD,KAAMmJ,EAEV,0CC5dM,IAA4B+B,GAqBhCC,EAAAA,EAAAA,IACE,IAAIC,EAAAA,GACFjK,GAtB0CkK,CAC5CC,EAA6BC,KAE3B,IADAC,mBAAoB9F,GAAsB6F,EAG5C,MAAM7H,EAAM4H,EAAUG,YAAY,OAAOpH,eACnCV,EAAe2H,EAAUG,YAbkB,iBAc3C7H,EAAoB0H,EAAUG,YAVtC,sBAWQ5H,EAAmByH,EAAUG,YAbrC,sBAgBE,OAAO,IAAIhG,EACT/B,EACAC,EACAC,EACAC,EACA6B,EACD,GAQA,UAACgG,sBAAqB,KAGzBC,EAAAA,EAAAA,IAAgB9E,EAAM+E,EAASV,IAE/BS,EAAAA,EAAAA,IAAgB9E,EAAM+E,EAAS,uDCjE1BtE,eAAeuE,EAAoBC,GACxC,IAAK,IAADC,EACF,MAAMC,EAA6B,QAAnBD,EAAGjI,EAAAA,EAAKmI,mBAAW,IAAAF,OAAA,EAAhBA,EAAkBG,IACrC,IAAKF,EAAY,MAAM,IAAIlL,MAAM,0BAEjC,MAAMqL,GAAMC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,kBAAmBP,GACjCQ,QAAaC,EAAAA,EAAAA,IAAOJ,GAE1B,IAAKG,EAAKE,SACR,MAAM,IAAI1L,MAAM,8BAGlB,MAAMd,EAAOsM,EAAKtM,OAGlB,KAFsBgM,IAAehM,EAAKyM,UAAYT,IAAehM,EAAK0M,iBAGxE,MAAM,IAAI5L,MAAM,iBAGlB,MAAO,CAAEd,MAAI2M,EAAAA,EAAAA,GAAA,CAAIC,GAAIN,EAAKM,IAAO5M,GAAQsD,MAAO,KAClD,CAAE,MAAOuJ,GACP,MAAO,CAAE7M,KAAM,KAAMsD,MAAOuJ,EAAInK,QAClC,CACF,kCCfA,MAAMoK,ECmCA,WAEyC,IAD7CpJ,EAAAiC,UAAAC,OAAA,QAAArC,IAAAoC,UAAA,GAAAA,UAAA,IAAmBoH,EAAAA,EAAAA,MACnBrH,EAAAC,UAAAC,OAAA,QAAArC,IAAAoC,UAAA,GAAAA,UAAA,GAA+BJ,GAE/ByH,EAAAA,EAAAA,IAAqB,aAAa,GAElC,MAIM/F,GAJ2CgG,EAAAA,EAAAA,KAC/CC,EAAAA,EAAAA,IAAmBxJ,GACnBvC,GAE0CkD,aAAa,CACvD8I,WAAYzH,IAER0H,GAAWC,EAAAA,EAAAA,IAAkC,aAInD,OAHID,YAgBJnG,EACAqG,EACAC,aJmGAtG,EACAqG,EACAC,GAEA,MAAMC,GAASC,EAAAA,EAAAA,IAAmBH,GAClCrG,EAAkBlB,eAAiB,OAAHlD,OAC9B2K,EAAS,IAAM,GACjB,OAAA3K,OAAMyK,EAAI,KAAAzK,OAAI0K,GAEVC,KACGE,EAAAA,EAAAA,IAAWzG,EAAkBlB,iBAClCiH,EAAAA,EAAAA,IAAqB,aAAa,GAEtC,CI9GEW,EACET,EAAAA,EAAAA,IAAqCjG,GACrCqG,EACAC,EAEJ,CAxBIK,CAAyB3G,KAAsBmG,GAE1CnG,CACT,CDrDkB4G,GAEZC,EAAO,IAAIC,OAAOC,QAAQ,CAC9BC,UAAW,iCAGE,SAASC,IAAkB,IAADnC,EACvC,MAAMoC,GAAWC,EAAAA,EAAAA,OACX,iBAAEC,IAAqBC,EAAAA,EAAAA,MAEtBC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,OAC9CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCnL,EAAOsL,IAAYH,EAAAA,EAAAA,UAAS,OAC5BI,EAAQC,IAAaL,EAAAA,EAAAA,WAAS,IAqDrCM,EAAAA,EAAAA,YAAU,KACYzH,WAClB,MAAM,KAAEtH,EAAI,MAAEsD,SAAgBuI,EAAoBwC,GAC9C/K,GAAOsL,EAAStL,GAChBtD,GAAMwO,EAAkBxO,GAC5B2O,GAAW,EAAM,EAEnBK,EAAa,GACZ,CAACX,IAEJ,MAAMrC,EAA6B,QAAnBD,EAAGjI,EAAAA,EAAKmI,mBAAW,IAAAF,OAAA,EAAhBA,EAAkBG,IAC/B+C,EAAoBjD,GAAcA,KAA6B,OAAduC,QAAc,IAAdA,OAAc,EAAdA,EAAgB7B,iBACjEwC,EAAalD,GAAcA,KAA6B,OAAduC,QAAc,IAAdA,OAAc,EAAdA,EAAgB9B,UAEhE,OACE0C,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAM,kBAAiBC,UAC3BC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,SAAS,KAAIH,SAAA,EACtBH,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAACxE,QAAQ,KAAKyE,GAAI,CAAEC,GAAI,GAAIN,SAAC,qBAIxCH,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAAC3E,QAAQ,WAAW4E,QAxElBC,KACb5B,EAAS,8BAA+B,CAAE6B,SAAS,GAAO,EAuEVL,GAAI,CAAEC,GAAI,GAAIN,SAAC,SAI1DZ,IAAWS,EAAAA,EAAAA,KAACc,EAAAA,EAAgB,IAC5B3M,IAAS6L,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,SAAS,QAAOb,SAAEhM,KAEjCoL,GAAWH,IACXgB,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAAd,SAAA,EACEH,EAAAA,EAAAA,KAACkB,EAAAA,EAAkB,CAAC9B,eAAgBA,EAAgBU,kBAAmBA,IAEtEC,GAAwC,aAA1BX,EAAetL,QAA0D,SAAjCsL,EAAe+B,gBACpEnB,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAAC3E,QAAQ,YAAYyE,GAAI,CAAEY,GAAI,EAAGC,GAAI,GAAKC,SAAU5B,EAAQiB,QA5ErDxI,UACzB,MAAMoJ,EAAS,IAMf,MAAMC,EAAgBC,KAAKC,MAAMH,KACjC5B,GAAU,GAEVhB,EAAKgD,UAAU,CACbH,gBACAI,SAAU,MACVlK,KAAM,cACNzD,YAAa,kCACb4N,SAAU1J,UACR,GAAI1H,EAAO0D,MAGT,OAFA2N,EAAAA,EAAoB3N,MAAM,GAADT,OAAIjD,EAAO0D,MAAMZ,SAAW,cACrDoM,GAAU,GAIZ,IACE,MAAMoC,GCwCdjK,EDxC6C6F,ECyC7CjG,EDzCwD,iBC4CjDG,GACLkG,EAAAA,EAAAA,IAAqCjG,GACrCJ,EACAE,UD9CYmK,EAAe,CACnBC,QAASvR,EAAOgN,GAChB8D,SACArC,qBAGF4C,EAAAA,EAAoBG,QAAQ,IAADvO,OAAK6N,EAAM,qBAAqB,WAE3D,MAAM,KAAE1Q,SAAe6L,EAAoBwC,GAC3CG,EAAkBxO,EACpB,CAAE,MAAO6M,GACPoE,EAAAA,EAAoB3N,MAAM,gDAAiD,QAC7E,CAAC,QACCwL,GAAU,EACZ,KCyBN7H,EACAJ,EACAE,CD3BM,GAEF,EAoCwGuI,SAC7FT,EAAS,gBAAe,QAAAhM,OAAW0L,EAAe8C,QAKvDlC,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACF,GAAI,CAAEY,GAAI,GAAKrF,QAAQ,YAAY4E,QAtFnBwB,KAChCnD,EAAS,6CAADtL,OAA8CwL,GAAoB,CAAE2B,SAAS,GAAO,EAqFNV,SAAC,iCAS3F,wSElGe,SAASe,EAAkB9E,GAKtC,IAADgG,EAAA,IALwC,YACzCC,EAAW,eACXjD,EAAc,gBACd7B,EAAe,kBACfuC,GAAoB,GACrB1D,GACkB6C,EAAAA,EAAAA,MAAjB,MACMqD,GAAYC,EAAAA,EAAAA,IAAQ,CAAEC,cAAepD,GAAkB,CAAC,KACxD,SAAEqD,EAAQ,SAAEC,EAAQ,aAAEC,GAAiBL,GACtCM,EAAMC,IAAWvD,EAAAA,EAAAA,WACtBlK,EAAAA,EAAAA,KAAIgK,EAAgB,iBAAmB,IAAI/N,MAAK+D,EAAAA,EAAAA,KAAIgK,EAAgB,kBAAoB,OAEnF0D,EAAmBC,IAAwBzD,EAAAA,EAAAA,WAAS,IACpD0D,EAAaC,IAAkB3D,EAAAA,EAAAA,WAAS,IACxC4D,EAAcC,IAAmB7D,EAAAA,EAAAA,UAAS,OAC1C8D,EAAcC,IAAmB/D,EAAAA,EAAAA,UAAS,KAEjDM,EAAAA,EAAAA,YAAU,KACJrC,GACFmF,EAAS,kBAAmBnF,EAAgBP,KAAOO,EAAgBE,GACrE,GACC,CAACF,EAAiBmF,IAErB,MAAMY,EAAyC,cAAb,OAAdlE,QAAc,IAAdA,OAAc,EAAdA,EAAgBtL,SAAoD,eAAb,OAAdsL,QAAc,IAAdA,OAAc,EAAdA,EAAgBtL,QAuH7E,OACEsM,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAAd,SAAA,CACGmD,IACClD,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAACC,SAAS,OAAOR,GAAI,CAAEC,GAAI,GAAIN,SAAA,CAAC,0BACdH,EAAAA,EAAAA,KAAA,UAAAG,SAAuB,OAAdf,QAAc,IAAdA,OAAc,EAAdA,EAAgBtL,SAChC,OAAdsL,QAAc,IAAdA,GAAAA,EAAgBmE,OAAM,WAAA7P,OAAS0L,EAAemE,QAAW,IAC3C,OAAdnE,QAAc,IAAdA,GAA+B,QAAjBgD,EAAdhD,EAAgBoE,uBAAe,IAAApB,OAAjB,EAAdA,EAAiCqB,UAChCrD,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAAd,SAAA,CACG,IAAI,OACFH,EAAAA,EAAAA,KAAA,UAAAG,SAASuD,IAAOtE,EAAeoE,gBAAgBC,UAAUE,OAAO,aAGxD,OAAdvE,QAAc,IAAdA,OAAc,EAAdA,EAAgBwE,mBACfxD,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAAd,SAAA,CACG,IAAI,OACFH,EAAAA,EAAAA,KAAA,UAAAG,SAASf,EAAewE,kBAAoBxE,EAAe9B,SAAW,WAAa,gBAExF,QAKN0C,EAAAA,EAAAA,KAAA,QAAM6D,SAAUlB,GAtIHxK,UACf,IAAImL,EACJ,IACEP,GAAqB,GAErBe,EAAAA,GAAAA,MAAc,CACZhS,MAAO,EACPiS,SAAU,mBACVC,OAAQ5E,EAAiB,0BAA4B,4BAGvD,MAAM6E,EAAOtP,EAAAA,EAAKmI,YAClB,IAAKmH,EAEH,YADAnC,EAAAA,EAAoB3N,MAAM,6BAA8B,SAI1D,IAAK+P,EAAO3G,gBAEV,YADAuE,EAAAA,EAAoB3N,MAAM,gCAAiC,SAI7D,IAAKyO,EAEH,YADAd,EAAAA,EAAoB3N,MAAM,uCAAwC,SAIpE,MAAMgQ,EAAWvB,EAAKa,OAASb,EAAKa,SAAWb,EAE/C,GAAkB,OAAdxD,QAAc,IAAdA,GAAAA,EAAgB3B,GAAI,CACtB,MAAM2G,GAAanH,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,kBAAmBkC,EAAe3B,UACvD4G,EAAAA,EAAAA,IAAUD,GAAU5G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACrB0G,GAAM,IACTI,cAAeH,EACfI,WAAWC,EAAAA,EAAAA,QAEf,KAAO,CACL,MAAMC,GAAqBC,EAAAA,EAAAA,IAAWxH,EAAAA,GAAI,mBASpCyH,SARmBC,EAAAA,EAAAA,IAAOH,GAAkBjH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7C0G,GAAM,IACTI,cAAeH,EACfU,WAAWL,EAAAA,EAAAA,MACX1Q,OAAQ,UACRwJ,SAAU2G,EAAKlH,QAGI2H,EAAAA,EAAAA,IAAWxH,EAAAA,GAAI,QAAS+G,EAAKlH,IAAK,wBACjD6H,EAAAA,EAAAA,IAAOD,EAAc,CACzBzE,MAAO,0BACP3M,QAAS,+CACTuR,KAAM,kBACND,WAAWL,EAAAA,EAAAA,MACXpJ,MAAM,IAGR,MAAM2J,GAAmBL,EAAAA,EAAAA,IAAWxH,EAAAA,GAAI,QAASgH,EAAO3G,gBAAiB,uBACnEqH,EAAAA,EAAAA,IAAOG,EAAkB,CAC7B7E,MAAO,sBACP3M,QAAQ,GAADG,OAAKuQ,EAAKe,aAAe,SAAQ,wCACxCF,KAAM,kBACND,WAAWL,EAAAA,EAAAA,MACXpJ,MAAM,GAEV,CAEA6H,GAAe,GACJ,OAAXZ,QAAW,IAAXA,GAAAA,GACF,CAAE,MAAOlO,GACP2N,EAAAA,EAAoB3N,MAAM,qDAAsD,QAClF,CAAC,QACC4O,GAAqB,EACvB,KA+DyC5C,UACrCC,EAAAA,EAAAA,MAAC6E,EAAAA,EAAK,CAACC,QAAS,EAAE/E,SAAA,EAChBH,EAAAA,EAAAA,KAACmF,EAAAA,GAAS3H,EAAAA,EAAAA,GAAA,CACR4H,WAAS,EACTC,UAAQ,EACRC,MAAM,UACNhE,SAAUgC,GACNb,EAAS,UAAW,CAAE4C,SAAU,2BAGtCrF,EAAAA,EAAAA,KAACuF,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAeC,cAAc,QAAOvF,UACrEH,EAAAA,EAAAA,KAAC2F,EAAAA,EAAc,CACbL,MAAM,0CACND,UAAQ,EACR/D,SAAUgC,EACVxR,MAAO8Q,EACPgD,SA3JiBC,IAC3BhD,EAAe,OAAPgD,QAAO,IAAPA,GAAAA,EAASpC,OAASoC,EAAQpC,SAAWoC,GAC7CnD,EAAS,gBAAwB,OAAPmD,QAAO,IAAPA,GAAAA,EAASpC,OAASoC,EAAQpC,SAAWoC,EAAQ,EA0J7DC,YAAaC,IAAU/F,EAAAA,EAAAA,KAACmF,EAAAA,GAAS3H,EAAAA,EAAAA,GAAA,GAAKuI,SAI1C/F,EAAAA,EAAAA,KAACmF,EAAAA,GAAS3H,EAAAA,EAAAA,GAAA,CAAC4H,WAAS,EAACE,MAAM,yBAAyBhE,SAAUgC,GAAiBb,EAAS,kBAExFzC,EAAAA,EAAAA,KAACgG,EAAAA,EAAa,CACZZ,WAAS,EACTa,KAAK,QACLnB,KAAK,SACLvF,QAASuD,EACT/G,QAAQ,YACRuF,SAAUgC,EAAYnD,SAEP,OAAdf,QAAc,IAAdA,GAAAA,EAAgB3B,GAAK,iBAAmB,kBAG5B,OAAd2B,QAAc,IAAdA,OAAc,EAAdA,EAAgB3B,MACd6F,IACAxD,GACCM,EAAAA,EAAAA,MAAC6E,EAAAA,EAAK,CAACiB,UAAU,MAAMhB,QAAS,EAAE/E,SAAA,EAChCH,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACyF,MAAM,UAAUpK,QAAQ,WAAW4E,QAASA,IAAMwC,EAAgB,YAAYhD,SAAC,aAGvFH,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACyF,MAAM,QAAQpK,QAAQ,WAAW4E,QAASA,IAAMwC,EAAgB,aAAahD,SAAC,eAKxFH,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACyF,MAAM,QAAQpK,QAAQ,WAAW4E,QAASA,IAAMwC,EAAgB,aAAahD,SAAC,0BAO9FC,EAAAA,EAAAA,MAACgG,EAAAA,EAAM,CAACC,OAAQnD,EAAcoD,QAASA,IAAMnD,EAAgB,MAAMhD,SAAA,EACjEC,EAAAA,EAAAA,MAACmG,EAAAA,EAAW,CAAApG,SAAA,CAAE+C,EAAa,uBAC3B9C,EAAAA,EAAAA,MAACoG,EAAAA,EAAa,CAAArG,SAAA,EACZH,EAAAA,EAAAA,KAACyG,EAAAA,EAAiB,CAAAtG,SACE,cAAjB+C,EACG,uDACA,2CAEY,cAAjBA,IACClD,EAAAA,EAAAA,KAACmF,EAAAA,EAAS,CACRuB,WAAS,EACTC,OAAO,QACPrB,MAAM,SACNF,WAAS,EACTrJ,QAAQ,WACRjK,MAAOsR,EACPwC,SAAUvR,GAAKgP,EAAgBhP,EAAEuS,OAAO9U,aAI9CsO,EAAAA,EAAAA,MAACyG,EAAAA,EAAa,CAAA1G,SAAA,EACZH,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACC,QAASA,IAAMwC,EAAgB,MAAMhD,SAAC,WAC9CH,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACC,QAASA,IAvIJxI,WACnB,IACE,MAAM8L,EAAOtP,EAAAA,EAAKmI,YACZsH,GAAanH,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,kBAAmBkC,EAAe3B,UACvD4G,EAAAA,EAAAA,IAAUD,GAAU5G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACxB1J,UACIsP,GAAgB,CAAEG,OAAQH,IAAgB,CAAF,GAC5CI,iBAAiBgB,EAAAA,EAAAA,MACjBZ,iBAAqB,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMlH,MAAO,KAC9BwH,WAAWC,EAAAA,EAAAA,SAGb,MAAMsC,GAASpC,EAAAA,EAAAA,IAAWxH,EAAAA,GAAI,kBAAmBkC,EAAe3B,GAAI,cAC9DmH,EAAAA,EAAAA,IAAOkC,EAAQ,CACnB9C,OAAQlQ,EACRP,QAAS6P,GAAY,qBAAA1P,OAAyBI,GAC9CiT,aAAiB,OAAJ9C,QAAI,IAAJA,OAAI,EAAJA,EAAMlH,MAAO,KAC1BiK,aAAaxC,EAAAA,EAAAA,QAGf,MAAMyC,EAAuB,cAAXnT,EAAyBsL,EAAe7B,gBAAkB6B,EAAe9B,SACrF4J,GAAWxC,EAAAA,EAAAA,IAAWxH,EAAAA,GAAI,QAAS+J,EAAW,uBAC9CrC,EAAAA,EAAAA,IAAOsC,EAAU,CACrBhH,MAAM,mBAADxM,OAAqBI,GAC1BP,QAAS6P,GAAY,mBAAA1P,OAAuBI,EAAOqT,cAAa,KAChErC,KAAM,kBACND,WAAWL,EAAAA,EAAAA,MACXpJ,MAAM,IAGR+H,EAAgB,MAChBE,EAAgB,IAChBvB,EAAAA,EAAoBG,QAAQ,WAADvO,OAAYI,EAAOqT,cAAa,iBAAiB,UAC9E,CAAE,MAAOhT,GACP2N,EAAAA,EAAoB3N,MAAM,iCAAkC,QAC9D,GAoG6BiT,CAAalE,GAAenH,QAAQ,YAAWoE,SAAC,mBAM3EH,EAAAA,EAAAA,KAACqH,EAAAA,EAAQ,CACPhB,KAAMrD,EACNsE,iBAAkB,IAClBhB,QAASA,IAAMrD,GAAe,GAC9B1P,QAAQ,6CAIhB,mLC/QM0M,GAAOsH,EAAAA,EAAAA,aAAW,CAAAnL,EAAoEY,KAAG,IAAtE,SAAEmD,EAAQ,MAAED,EAAQ,GAAE,gBAAEsH,GAAkB,EAAK,KAAEC,GAAgBrL,EAAPsL,GAAKC,EAAAA,EAAAA,GAAAvL,EAAAwL,GAAA,OACtFxH,EAAAA,EAAAA,MAAAa,EAAAA,SAAA,CAAAd,SAAA,EACEC,EAAAA,EAAAA,MAACyH,EAAAA,GAAM,CAAA1H,SAAA,EACLH,EAAAA,EAAAA,KAAA,SAAAG,SAAA,GAAAzM,OAAWwM,EAAK,YACfuH,MAGHrH,EAAAA,EAAAA,MAAC0H,EAAAA,GAAGtK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACR,IAAKA,GAAS0K,GAAK,IAAAvH,SAAA,CACrBqH,IACCxH,EAAAA,EAAAA,KAAC+H,EAAAA,EAAuB,CACtBpH,QAASA,IAAM/B,OAAOoJ,QAAQC,IAAI,GAClCzH,GAAI,CACF0H,IAAK,GACLC,KAAM,GACNC,OAAQ,UACRC,SAAU,cAIflI,QAEF,IAGLF,EAAKqI,UAAY,CACfnI,SAAUoI,IAAAA,KAAeC,WACzBtI,MAAOqI,IAAAA,OACPd,KAAMc,IAAAA,MAGR","sources":["../node_modules/@firebase/functions/src/serializer.ts","../node_modules/@firebase/functions/src/constants.ts","../node_modules/@firebase/functions/src/error.ts","../node_modules/@firebase/functions/src/context.ts","../node_modules/@firebase/functions/src/service.ts","../node_modules/@firebase/functions/src/config.ts","utils/serviceRequest.js","pages/ServiceRequest.js","../node_modules/@firebase/functions/src/api.ts","sections/@dashboard/app/ServiceRequestForm.js","components/Page.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nconst UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues(\n  // { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  o: { [key: string]: any },\n  f: (arg0: unknown) => unknown\n): object {\n  const result: { [key: string]: unknown } = {};\n  for (const key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n  return result;\n}\n\n/**\n * Takes data and encodes it in a JSON-friendly way, such that types such as\n * Date are preserved.\n * @internal\n * @param data - Data to encode.\n */\nexport function encode(data: unknown): unknown {\n  if (data == null) {\n    return null;\n  }\n  if (data instanceof Number) {\n    data = data.valueOf();\n  }\n  if (typeof data === 'number' && isFinite(data)) {\n    // Any number in JS is safe to put directly in JSON and parse as a double\n    // without any loss of precision.\n    return data;\n  }\n  if (data === true || data === false) {\n    return data;\n  }\n  if (Object.prototype.toString.call(data) === '[object String]') {\n    return data;\n  }\n  if (data instanceof Date) {\n    return data.toISOString();\n  }\n  if (Array.isArray(data)) {\n    return data.map(x => encode(x));\n  }\n  if (typeof data === 'function' || typeof data === 'object') {\n    return mapValues(data!, x => encode(x));\n  }\n  // If we got this far, the data is not encodable.\n  throw new Error('Data cannot be encoded in JSON: ' + data);\n}\n\n/**\n * Takes data that's been encoded in a JSON-friendly form and returns a form\n * with richer datatypes, such as Dates, etc.\n * @internal\n * @param json - JSON to convert.\n */\nexport function decode(json: unknown): unknown {\n  if (json == null) {\n    return json;\n  }\n  if ((json as { [key: string]: unknown })['@type']) {\n    switch ((json as { [key: string]: unknown })['@type']) {\n      case LONG_TYPE:\n      // Fall through and handle this the same as unsigned.\n      case UNSIGNED_LONG_TYPE: {\n        // Technically, this could work return a valid number for malformed\n        // data if there was a number followed by garbage. But it's just not\n        // worth all the extra code to detect that case.\n        const value = Number((json as { [key: string]: unknown })['value']);\n        if (isNaN(value)) {\n          throw new Error('Data cannot be decoded from JSON: ' + json);\n        }\n        return value;\n      }\n      default: {\n        throw new Error('Data cannot be decoded from JSON: ' + json);\n      }\n    }\n  }\n  if (Array.isArray(json)) {\n    return json.map(x => decode(x));\n  }\n  if (typeof json === 'function' || typeof json === 'object') {\n    return mapValues(json!, x => decode(x));\n  }\n  // Anything else is safe to return.\n  return json;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Functions.\n */\nexport const FUNCTIONS_TYPE = 'functions';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FunctionsErrorCodeCore as FunctionsErrorCode } from './public-types';\nimport { decode } from './serializer';\nimport { HttpResponseBody } from './service';\nimport { FirebaseError } from '@firebase/util';\nimport { FUNCTIONS_TYPE } from './constants';\n\n/**\n * Standard error codes for different ways a request can fail, as defined by:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * This map is used primarily to convert from a backend error code string to\n * a client SDK error code string, and make sure it's in the supported set.\n */\nconst errorCodeMap: { [name: string]: FunctionsErrorCode } = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n\n/**\n * An error returned by the Firebase Functions client SDK.\n *\n * See {@link FunctionsErrorCode} for full documentation of codes.\n *\n * @public\n */\nexport class FunctionsError extends FirebaseError {\n  /**\n   * Constructs a new instance of the `FunctionsError` class.\n   */\n  constructor(\n    /**\n     * A standard error code that will be returned to the client. This also\n     * determines the HTTP status code of the response, as defined in code.proto.\n     */\n    code: FunctionsErrorCode,\n    message?: string,\n    /**\n     * Additional details to be converted to JSON and included in the error response.\n     */\n    readonly details?: unknown\n  ) {\n    super(`${FUNCTIONS_TYPE}/${code}`, message || '');\n\n    // Since the FirebaseError constructor sets the prototype of `this` to FirebaseError.prototype,\n    // we also have to do it in all subclasses to allow for correct `instanceof` checks.\n    Object.setPrototypeOf(this, FunctionsError.prototype);\n  }\n}\n\n/**\n * Takes an HTTP status code and returns the corresponding ErrorCode.\n * This is the standard HTTP status code -> error mapping defined in:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * @param status An HTTP status code.\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\n */\nfunction codeForHTTPStatus(status: number): FunctionsErrorCode {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n    case 400:\n      return 'invalid-argument';\n    case 401:\n      return 'unauthenticated';\n    case 403:\n      return 'permission-denied';\n    case 404:\n      return 'not-found';\n    case 409:\n      return 'aborted';\n    case 429:\n      return 'resource-exhausted';\n    case 499:\n      return 'cancelled';\n    case 500:\n      return 'internal';\n    case 501:\n      return 'unimplemented';\n    case 503:\n      return 'unavailable';\n    case 504:\n      return 'deadline-exceeded';\n    default: // ignore\n  }\n  return 'unknown';\n}\n\n/**\n * Takes an HTTP response and returns the corresponding Error, if any.\n */\nexport function _errorForResponse(\n  status: number,\n  bodyJSON: HttpResponseBody | null\n): Error | null {\n  let code = codeForHTTPStatus(status);\n\n  // Start with reasonable defaults from the status code.\n  let description: string = code;\n\n  let details: unknown = undefined;\n\n  // Then look through the body for explicit details.\n  try {\n    const errorJSON = bodyJSON && bodyJSON.error;\n    if (errorJSON) {\n      const status = errorJSON.status;\n      if (typeof status === 'string') {\n        if (!errorCodeMap[status]) {\n          // They must've included an unknown error code in the body.\n          return new FunctionsError('internal', 'internal');\n        }\n        code = errorCodeMap[status];\n\n        // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n        description = status;\n      }\n\n      const message = errorJSON.message;\n      if (typeof message === 'string') {\n        description = message;\n      }\n\n      details = errorJSON.details;\n      if (details !== undefined) {\n        details = decode(details);\n      }\n    }\n  } catch (e) {\n    // If we couldn't parse explicit error data, that's fine.\n  }\n\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n\n  return new FunctionsError(code, description, details);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from '@firebase/component';\nimport { _isFirebaseServerApp, FirebaseApp } from '@firebase/app';\nimport {\n  AppCheckInternalComponentName,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport {\n  MessagingInternal,\n  MessagingInternalComponentName\n} from '@firebase/messaging-interop-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\n\n/**\n * The metadata that should be supplied with function calls.\n * @internal\n */\nexport interface Context {\n  authToken?: string;\n  messagingToken?: string;\n  appCheckToken: string | null;\n}\n\n/**\n * Helper class to get metadata that should be included with a function call.\n * @internal\n */\nexport class ContextProvider {\n  private auth: FirebaseAuthInternal | null = null;\n  private messaging: MessagingInternal | null = null;\n  private appCheck: FirebaseAppCheckInternal | null = null;\n  private serverAppAppCheckToken: string | null = null;\n  constructor(\n    readonly app: FirebaseApp,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<MessagingInternalComponentName>,\n    appCheckProvider: Provider<AppCheckInternalComponentName>\n  ) {\n    if (_isFirebaseServerApp(app) && app.settings.appCheckToken) {\n      this.serverAppAppCheckToken = app.settings.appCheckToken;\n    }\n    this.auth = authProvider.getImmediate({ optional: true });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth) {\n      authProvider.get().then(\n        auth => (this.auth = auth),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n\n    if (!this.messaging) {\n      messagingProvider.get().then(\n        messaging => (this.messaging = messaging),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(\n        appCheck => (this.appCheck = appCheck),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n  }\n\n  async getAuthToken(): Promise<string | undefined> {\n    if (!this.auth) {\n      return undefined;\n    }\n\n    try {\n      const token = await this.auth.getToken();\n      return token?.accessToken;\n    } catch (e) {\n      // If there's any error when trying to get the auth token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getMessagingToken(): Promise<string | undefined> {\n    if (\n      !this.messaging ||\n      !('Notification' in self) ||\n      Notification.permission !== 'granted'\n    ) {\n      return undefined;\n    }\n\n    try {\n      return await this.messaging.getToken();\n    } catch (e) {\n      // We don't warn on this, because it usually means messaging isn't set up.\n      // console.warn('Failed to retrieve instance id token.', e);\n\n      // If there's any error when trying to get the token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getAppCheckToken(\n    limitedUseAppCheckTokens?: boolean\n  ): Promise<string | null> {\n    if (this.serverAppAppCheckToken) {\n      return this.serverAppAppCheckToken;\n    }\n    if (this.appCheck) {\n      const result = limitedUseAppCheckTokens\n        ? await this.appCheck.getLimitedUseToken()\n        : await this.appCheck.getToken();\n      if (result.error) {\n        // Do not send the App Check header to the functions endpoint if\n        // there was an error from the App Check exchange endpoint. The App\n        // Check SDK will already have logged the error to console.\n        return null;\n      }\n      return result.token;\n    }\n    return null;\n  }\n\n  async getContext(limitedUseAppCheckTokens?: boolean): Promise<Context> {\n    const authToken = await this.getAuthToken();\n    const messagingToken = await this.getMessagingToken();\n    const appCheckToken = await this.getAppCheckToken(limitedUseAppCheckTokens);\n    return { authToken, messagingToken, appCheckToken };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport {\n  HttpsCallable,\n  HttpsCallableResult,\n  HttpsCallableStreamResult,\n  HttpsCallableOptions,\n  HttpsCallableStreamOptions\n} from './public-types';\nimport { _errorForResponse, FunctionsError } from './error';\nimport { ContextProvider } from './context';\nimport { encode, decode } from './serializer';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { MessagingInternalComponentName } from '@firebase/messaging-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport {\n  isCloudWorkstation,\n  pingServer,\n  updateEmulatorBanner\n} from '@firebase/util';\n\nexport const DEFAULT_REGION = 'us-central1';\n\nconst responseLineRE = /^data: (.*?)(?:\\n|$)/;\n\n/**\n * The response to an http request.\n */\ninterface HttpResponse {\n  status: number;\n  json: HttpResponseBody | null;\n}\n/**\n * Describes the shape of the HttpResponse body.\n * It makes functions that would otherwise take {} able to access the\n * possible elements in the body more easily\n */\nexport interface HttpResponseBody {\n  data?: unknown;\n  result?: unknown;\n  error?: {\n    message?: unknown;\n    status?: unknown;\n    details?: unknown;\n  };\n}\n\ninterface CancellablePromise<T> {\n  promise: Promise<T>;\n  cancel: () => void;\n}\n\n/**\n * Returns a Promise that will be rejected after the given duration.\n * The error will be of type FunctionsError.\n *\n * @param millis Number of milliseconds to wait before rejecting.\n */\nfunction failAfter(millis: number): CancellablePromise<never> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timer: any | null = null;\n  return {\n    promise: new Promise((_, reject) => {\n      timer = setTimeout(() => {\n        reject(new FunctionsError('deadline-exceeded', 'deadline-exceeded'));\n      }, millis);\n    }),\n    cancel: () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    }\n  };\n}\n\n/**\n * The main class for the Firebase Functions SDK.\n * @internal\n */\nexport class FunctionsService implements _FirebaseService {\n  readonly contextProvider: ContextProvider;\n  emulatorOrigin: string | null = null;\n  cancelAllRequests: Promise<void>;\n  deleteService!: () => Promise<void>;\n  region: string;\n  customDomain: string | null;\n\n  /**\n   * Creates a new Functions service for the given app.\n   * @param app - The FirebaseApp to use.\n   */\n  constructor(\n    readonly app: FirebaseApp,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<MessagingInternalComponentName>,\n    appCheckProvider: Provider<AppCheckInternalComponentName>,\n    regionOrCustomDomain: string = DEFAULT_REGION,\n    readonly fetchImpl: typeof fetch = (...args) => fetch(...args)\n  ) {\n    this.contextProvider = new ContextProvider(\n      app,\n      authProvider,\n      messagingProvider,\n      appCheckProvider\n    );\n    // Cancels all ongoing requests when resolved.\n    this.cancelAllRequests = new Promise(resolve => {\n      this.deleteService = () => {\n        return Promise.resolve(resolve());\n      };\n    });\n\n    // Resolve the region or custom domain overload by attempting to parse it.\n    try {\n      const url = new URL(regionOrCustomDomain);\n      this.customDomain =\n        url.origin + (url.pathname === '/' ? '' : url.pathname);\n      this.region = DEFAULT_REGION;\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain;\n    }\n  }\n\n  _delete(): Promise<void> {\n    return this.deleteService();\n  }\n\n  /**\n   * Returns the URL for a callable with the given name.\n   * @param name - The name of the callable.\n   * @internal\n   */\n  _url(name: string): string {\n    const projectId = this.app.options.projectId;\n    if (this.emulatorOrigin !== null) {\n      const origin = this.emulatorOrigin;\n      return `${origin}/${projectId}/${this.region}/${name}`;\n    }\n\n    if (this.customDomain !== null) {\n      return `${this.customDomain}/${name}`;\n    }\n\n    return `https://${this.region}-${projectId}.cloudfunctions.net/${name}`;\n  }\n}\n\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host The emulator host (ex: localhost)\n * @param port The emulator port (ex: 5001)\n * @public\n */\nexport function connectFunctionsEmulator(\n  functionsInstance: FunctionsService,\n  host: string,\n  port: number\n): void {\n  const useSsl = isCloudWorkstation(host);\n  functionsInstance.emulatorOrigin = `http${\n    useSsl ? 's' : ''\n  }://${host}:${port}`;\n  // Workaround to get cookies in Firebase Studio\n  if (useSsl) {\n    void pingServer(functionsInstance.emulatorOrigin);\n    updateEmulatorBanner('Functions', true);\n  }\n}\n\n/**\n * Returns a reference to the callable https trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nexport function httpsCallable<RequestData, ResponseData, StreamData = unknown>(\n  functionsInstance: FunctionsService,\n  name: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData, StreamData> {\n  const callable = (\n    data?: RequestData | null\n  ): Promise<HttpsCallableResult> => {\n    return call(functionsInstance, name, data, options || {});\n  };\n\n  callable.stream = (\n    data?: RequestData | null,\n    options?: HttpsCallableStreamOptions\n  ) => {\n    return stream(functionsInstance, name, data, options);\n  };\n\n  return callable as HttpsCallable<RequestData, ResponseData, StreamData>;\n}\n\n/**\n * Returns a reference to the callable https trigger with the given url.\n * @param url - The url of the trigger.\n * @public\n */\nexport function httpsCallableFromURL<\n  RequestData,\n  ResponseData,\n  StreamData = unknown\n>(\n  functionsInstance: FunctionsService,\n  url: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData, StreamData> {\n  const callable = (\n    data?: RequestData | null\n  ): Promise<HttpsCallableResult> => {\n    return callAtURL(functionsInstance, url, data, options || {});\n  };\n\n  callable.stream = (\n    data?: RequestData | null,\n    options?: HttpsCallableStreamOptions\n  ) => {\n    return streamAtURL(functionsInstance, url, data, options || {});\n  };\n  return callable as HttpsCallable<RequestData, ResponseData, StreamData>;\n}\n\n/**\n * Does an HTTP POST and returns the completed response.\n * @param url The url to post to.\n * @param body The JSON body of the post.\n * @param headers The HTTP headers to include in the request.\n * @return A Promise that will succeed when the request finishes.\n */\nasync function postJSON(\n  url: string,\n  body: unknown,\n  headers: { [key: string]: string },\n  fetchImpl: typeof fetch\n): Promise<HttpResponse> {\n  headers['Content-Type'] = 'application/json';\n\n  let response: Response;\n  try {\n    response = await fetchImpl(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers\n    });\n  } catch (e) {\n    // This could be an unhandled error on the backend, or it could be a\n    // network error. There's no way to know, since an unhandled error on the\n    // backend will fail to set the proper CORS header, and thus will be\n    // treated as a network error by fetch.\n    return {\n      status: 0,\n      json: null\n    };\n  }\n  let json: HttpResponseBody | null = null;\n  try {\n    json = await response.json();\n  } catch (e) {\n    // If we fail to parse JSON, it will fail the same as an empty body.\n  }\n  return {\n    status: response.status,\n    json\n  };\n}\n\n/**\n * Creates authorization headers for Firebase Functions requests.\n * @param functionsInstance The Firebase Functions service instance.\n * @param options Options for the callable function, including AppCheck token settings.\n * @return A Promise that resolves a headers map to include in outgoing fetch request.\n */\nasync function makeAuthHeaders(\n  functionsInstance: FunctionsService,\n  options: HttpsCallableOptions\n): Promise<Record<string, string>> {\n  const headers: Record<string, string> = {};\n  const context = await functionsInstance.contextProvider.getContext(\n    options.limitedUseAppCheckTokens\n  );\n  if (context.authToken) {\n    headers['Authorization'] = 'Bearer ' + context.authToken;\n  }\n  if (context.messagingToken) {\n    headers['Firebase-Instance-ID-Token'] = context.messagingToken;\n  }\n  if (context.appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = context.appCheckToken;\n  }\n  return headers;\n}\n\n/**\n * Calls a callable function asynchronously and returns the result.\n * @param name The name of the callable trigger.\n * @param data The data to pass as params to the function.\n */\nfunction call(\n  functionsInstance: FunctionsService,\n  name: string,\n  data: unknown,\n  options: HttpsCallableOptions\n): Promise<HttpsCallableResult> {\n  const url = functionsInstance._url(name);\n  return callAtURL(functionsInstance, url, data, options);\n}\n\n/**\n * Calls a callable function asynchronously and returns the result.\n * @param url The url of the callable trigger.\n * @param data The data to pass as params to the function.\n */\nasync function callAtURL(\n  functionsInstance: FunctionsService,\n  url: string,\n  data: unknown,\n  options: HttpsCallableOptions\n): Promise<HttpsCallableResult> {\n  // Encode any special types, such as dates, in the input data.\n  data = encode(data);\n  const body = { data };\n\n  // Add a header for the authToken.\n  const headers = await makeAuthHeaders(functionsInstance, options);\n\n  // Default timeout to 70s, but let the options override it.\n  const timeout = options.timeout || 70000;\n\n  const failAfterHandle = failAfter(timeout);\n  const response = await Promise.race([\n    postJSON(url, body, headers, functionsInstance.fetchImpl),\n    failAfterHandle.promise,\n    functionsInstance.cancelAllRequests\n  ]);\n\n  // Always clear the failAfter timeout\n  failAfterHandle.cancel();\n\n  // If service was deleted, interrupted response throws an error.\n  if (!response) {\n    throw new FunctionsError(\n      'cancelled',\n      'Firebase Functions instance was deleted.'\n    );\n  }\n\n  // Check for an error status, regardless of http status.\n  const error = _errorForResponse(response.status, response.json);\n  if (error) {\n    throw error;\n  }\n\n  if (!response.json) {\n    throw new FunctionsError('internal', 'Response is not valid JSON object.');\n  }\n\n  let responseData = response.json.data;\n  // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n  // backwards compatibility.\n  if (typeof responseData === 'undefined') {\n    responseData = response.json.result;\n  }\n  if (typeof responseData === 'undefined') {\n    // Consider the response malformed.\n    throw new FunctionsError('internal', 'Response is missing data field.');\n  }\n\n  // Decode any special types, such as dates, in the returned data.\n  const decodedData = decode(responseData);\n\n  return { data: decodedData };\n}\n\n/**\n * Calls a callable function asynchronously and returns a streaming result.\n * @param name The name of the callable trigger.\n * @param data The data to pass as params to the function.\n * @param options Streaming request options.\n */\nfunction stream(\n  functionsInstance: FunctionsService,\n  name: string,\n  data: unknown,\n  options?: HttpsCallableStreamOptions\n): Promise<HttpsCallableStreamResult> {\n  const url = functionsInstance._url(name);\n  return streamAtURL(functionsInstance, url, data, options || {});\n}\n\n/**\n * Calls a callable function asynchronously and return a streaming result.\n * @param url The url of the callable trigger.\n * @param data The data to pass as params to the function.\n * @param options Streaming request options.\n */\nasync function streamAtURL(\n  functionsInstance: FunctionsService,\n  url: string,\n  data: unknown,\n  options: HttpsCallableStreamOptions\n): Promise<HttpsCallableStreamResult> {\n  // Encode any special types, such as dates, in the input data.\n  data = encode(data);\n  const body = { data };\n  //\n  // Add a header for the authToken.\n  const headers = await makeAuthHeaders(functionsInstance, options);\n  headers['Content-Type'] = 'application/json';\n  headers['Accept'] = 'text/event-stream';\n\n  let response: Response;\n  try {\n    response = await functionsInstance.fetchImpl(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers,\n      signal: options?.signal\n    });\n  } catch (e) {\n    if (e instanceof Error && e.name === 'AbortError') {\n      const error = new FunctionsError('cancelled', 'Request was cancelled.');\n      return {\n        data: Promise.reject(error),\n        stream: {\n          [Symbol.asyncIterator]() {\n            return {\n              next() {\n                return Promise.reject(error);\n              }\n            };\n          }\n        }\n      };\n    }\n    // This could be an unhandled error on the backend, or it could be a\n    // network error. There's no way to know, since an unhandled error on the\n    // backend will fail to set the proper CORS header, and thus will be\n    // treated as a network error by fetch.\n    const error = _errorForResponse(0, null);\n    return {\n      data: Promise.reject(error),\n      // Return an empty async iterator\n      stream: {\n        [Symbol.asyncIterator]() {\n          return {\n            next() {\n              return Promise.reject(error);\n            }\n          };\n        }\n      }\n    };\n  }\n  let resultResolver: (value: unknown) => void;\n  let resultRejecter: (reason: unknown) => void;\n  const resultPromise = new Promise<unknown>((resolve, reject) => {\n    resultResolver = resolve;\n    resultRejecter = reject;\n  });\n  options?.signal?.addEventListener('abort', () => {\n    const error = new FunctionsError('cancelled', 'Request was cancelled.');\n    resultRejecter(error);\n  });\n  const reader = response.body!.getReader();\n  const rstream = createResponseStream(\n    reader,\n    resultResolver!,\n    resultRejecter!,\n    options?.signal\n  );\n  return {\n    stream: {\n      [Symbol.asyncIterator]() {\n        const rreader = rstream.getReader();\n        return {\n          async next() {\n            const { value, done } = await rreader.read();\n            return { value: value as unknown, done };\n          },\n          async return() {\n            await rreader.cancel();\n            return { done: true, value: undefined };\n          }\n        };\n      }\n    },\n    data: resultPromise\n  };\n}\n\n/**\n * Creates a ReadableStream that processes a streaming response from a streaming\n * callable function that returns data in server-sent event format.\n *\n * @param reader The underlying reader providing raw response data\n * @param resultResolver Callback to resolve the final result when received\n * @param resultRejecter Callback to reject with an error if encountered\n * @param signal Optional AbortSignal to cancel the stream processing\n * @returns A ReadableStream that emits decoded messages from the response\n *\n * The returned ReadableStream:\n *   1. Emits individual messages when \"message\" data is received\n *   2. Resolves with the final result when a \"result\" message is received\n *   3. Rejects with an error if an \"error\" message is received\n */\nfunction createResponseStream(\n  reader: ReadableStreamDefaultReader<Uint8Array>,\n  resultResolver: (value: unknown) => void,\n  resultRejecter: (reason: unknown) => void,\n  signal?: AbortSignal\n): ReadableStream<unknown> {\n  const processLine = (\n    line: string,\n    controller: ReadableStreamDefaultController\n  ): void => {\n    const match = line.match(responseLineRE);\n    // ignore all other lines (newline, comments, etc.)\n    if (!match) {\n      return;\n    }\n    const data = match[1];\n    try {\n      const jsonData = JSON.parse(data);\n      if ('result' in jsonData) {\n        resultResolver(decode(jsonData.result));\n        return;\n      }\n      if ('message' in jsonData) {\n        controller.enqueue(decode(jsonData.message));\n        return;\n      }\n      if ('error' in jsonData) {\n        const error = _errorForResponse(0, jsonData);\n        controller.error(error);\n        resultRejecter(error);\n        return;\n      }\n    } catch (error) {\n      if (error instanceof FunctionsError) {\n        controller.error(error);\n        resultRejecter(error);\n        return;\n      }\n      // ignore other parsing errors\n    }\n  };\n\n  const decoder = new TextDecoder();\n  return new ReadableStream({\n    start(controller) {\n      let currentText = '';\n      return pump();\n      async function pump(): Promise<void> {\n        if (signal?.aborted) {\n          const error = new FunctionsError(\n            'cancelled',\n            'Request was cancelled'\n          );\n          controller.error(error);\n          resultRejecter(error);\n          return Promise.resolve();\n        }\n        try {\n          const { value, done } = await reader.read();\n          if (done) {\n            if (currentText.trim()) {\n              processLine(currentText.trim(), controller);\n            }\n            controller.close();\n            return;\n          }\n          if (signal?.aborted) {\n            const error = new FunctionsError(\n              'cancelled',\n              'Request was cancelled'\n            );\n            controller.error(error);\n            resultRejecter(error);\n            await reader.cancel();\n            return;\n          }\n          currentText += decoder.decode(value, { stream: true });\n          const lines = currentText.split('\\n');\n          currentText = lines.pop() || '';\n          for (const line of lines) {\n            if (line.trim()) {\n              processLine(line.trim(), controller);\n            }\n          }\n          return pump();\n        } catch (error) {\n          const functionsError =\n            error instanceof FunctionsError\n              ? error\n              : _errorForResponse(0, null);\n          controller.error(functionsError);\n          resultRejecter(functionsError);\n        }\n      }\n    },\n    cancel() {\n      return reader.cancel();\n    }\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { FunctionsService } from './service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactory\n} from '@firebase/component';\nimport { FUNCTIONS_TYPE } from './constants';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { MessagingInternalComponentName } from '@firebase/messaging-interop-types';\nimport { name, version } from '../package.json';\n\nconst AUTH_INTERNAL_NAME: FirebaseAuthInternalName = 'auth-internal';\nconst APP_CHECK_INTERNAL_NAME: AppCheckInternalComponentName =\n  'app-check-internal';\nconst MESSAGING_INTERNAL_NAME: MessagingInternalComponentName =\n  'messaging-internal';\n\nexport function registerFunctions(variant?: string): void {\n  const factory: InstanceFactory<'functions'> = (\n    container: ComponentContainer,\n    { instanceIdentifier: regionOrCustomDomain }\n  ) => {\n    // Dependencies\n    const app = container.getProvider('app').getImmediate();\n    const authProvider = container.getProvider(AUTH_INTERNAL_NAME);\n    const messagingProvider = container.getProvider(MESSAGING_INTERNAL_NAME);\n    const appCheckProvider = container.getProvider(APP_CHECK_INTERNAL_NAME);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new FunctionsService(\n      app,\n      authProvider,\n      messagingProvider,\n      appCheckProvider,\n      regionOrCustomDomain\n    );\n  };\n\n  _registerComponent(\n    new Component(\n      FUNCTIONS_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","import { doc, getDoc } from 'firebase/firestore';\nimport { auth, db } from '../actions/firebase';\n\nexport async function fetchServiceRequest(requestId) {\n  try {\n    const currentUid = auth.currentUser?.uid;\n    if (!currentUid) throw new Error('User not authenticated');\n\n    const ref = doc(db, 'serviceRequests', requestId);\n    const snap = await getDoc(ref);\n\n    if (!snap.exists()) {\n      throw new Error('Service request not found.');\n    }\n\n    const data = snap.data();\n    const isParticipant = currentUid === data.customer || currentUid === data.serviceProvider;\n\n    if (!isParticipant) {\n      throw new Error('Access denied');\n    }\n\n    return { data: { id: snap.id, ...data }, error: null };\n  } catch (err) {\n    return { data: null, error: err.message };\n  }\n}\n","// File: src/pages/ServiceRequest.js\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Container, Typography, Button, CircularProgress, Alert } from '@mui/material';\nimport { httpsCallable, getFunctions } from 'firebase/functions';\nimport ServiceRequestForm from '../sections/@dashboard/app/ServiceRequestForm';\nimport { fetchServiceRequest } from '../utils/serviceRequest';\nimport notificationManager from '../actions/NotificationManager';\nimport Page from '../components/Page';\nimport { auth } from '../actions/firebase';\n\nconst functions = getFunctions();\n\nconst yoco = new window.YocoSDK({\n  publicKey: 'pk_test_ed3c54a6gOol69qa7f45', // process.env.REACT_APP_YOCO_PUBLIC_KEY\n});\n\nexport default function ServiceRequest() {\n  const navigate = useNavigate();\n  const { serviceRequestId } = useParams();\n\n  const [serviceRequest, setServiceRequest] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [paying, setPaying] = useState(false);\n\n  const goBack = () => {\n    navigate('/dashboard/service_requests', { replace: true });\n  };\n\n  const goToServiceRequestMeeting = () => {\n    navigate(`/dashboard/advisory_session_meeting/?room=${serviceRequestId}`, { replace: true });\n  };\n\n  const handlePopupPayment = async () => {\n    const amount = 20000; // serviceRequest?.fee;\n    if (!amount) {\n      notificationManager.error('Invalid amount for payment', 'Error');\n      return;\n    }\n\n    const amountInCents = Math.round(amount * 100);\n    setPaying(true);\n\n    yoco.showPopup({\n      amountInCents,\n      currency: 'ZAR',\n      name: 'Jua Payment',\n      description: 'Pay for advisory session on JUA',\n      callback: async result => {\n        if (result.error) {\n          notificationManager.error(`${result.error.message}`, 'Error');\n          setPaying(false);\n          return;\n        }\n\n        try {\n          const processPayment = httpsCallable(functions, 'processPayment');\n          await processPayment({\n            tokenId: result.id,\n            amount,\n            serviceRequestId,\n          });\n\n          notificationManager.success(`R${amount} paid for session`, 'Success');\n\n          const { data } = await fetchServiceRequest(serviceRequestId);\n          setServiceRequest(data);\n        } catch (err) {\n          notificationManager.error('Something went wrong while processing payment', 'Error');\n        } finally {\n          setPaying(false);\n        }\n      },\n    });\n  };\n\n  useEffect(() => {\n    const loadRequest = async () => {\n      const { data, error } = await fetchServiceRequest(serviceRequestId);\n      if (error) setError(error);\n      if (data) setServiceRequest(data);\n      setLoading(false);\n    };\n    loadRequest();\n  }, [serviceRequestId]);\n\n  const currentUid = auth.currentUser?.uid;\n  const isServiceProvider = currentUid && currentUid === serviceRequest?.serviceProvider;\n  const isCustomer = currentUid && currentUid === serviceRequest?.customer;\n\n  return (\n    <Page title=\"Service Request\">\n      <Container maxWidth=\"xl\">\n        <Typography variant=\"h4\" sx={{ mb: 5 }}>\n          Service Request\n        </Typography>\n\n        <Button variant=\"outlined\" onClick={goBack} sx={{ mb: 3 }}>\n          Back\n        </Button>\n\n        {loading && <CircularProgress />}\n        {error && <Alert severity=\"error\">{error}</Alert>}\n\n        {!loading && serviceRequest && (\n          <>\n            <ServiceRequestForm serviceRequest={serviceRequest} isServiceProvider={isServiceProvider} />\n\n            {isCustomer && serviceRequest.status === 'Accepted' && serviceRequest.paymentStatus !== 'paid' && (\n              <Button variant=\"contained\" sx={{ mt: 5, mr: 2 }} disabled={paying} onClick={handlePopupPayment}>\n                {paying ? 'Processing...' : `Pay R${serviceRequest.fee}`}\n              </Button>\n            )}\n\n            {/* {serviceRequest.status === 'Accepted' && serviceRequest.paymentStatus === 'paid' && ( */}\n            <Button sx={{ mt: 5 }} variant=\"contained\" onClick={goToServiceRequestMeeting}>\n              Go To Service Request\n            </Button>\n            {/* )} */}\n          </>\n        )}\n      </Container>\n    </Page>\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\nimport { FUNCTIONS_TYPE } from './constants';\n\nimport { Provider } from '@firebase/component';\nimport { Functions, HttpsCallableOptions, HttpsCallable } from './public-types';\nimport {\n  FunctionsService,\n  DEFAULT_REGION,\n  connectFunctionsEmulator as _connectFunctionsEmulator,\n  httpsCallable as _httpsCallable,\n  httpsCallableFromURL as _httpsCallableFromURL\n} from './service';\nimport {\n  getModularInstance,\n  getDefaultEmulatorHostnameAndPort,\n  updateEmulatorBanner\n} from '@firebase/util';\n\nexport { FunctionsError } from './error';\nexport * from './public-types';\n\n/**\n * Returns a {@link Functions} instance for the given app.\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n * @param regionOrCustomDomain - one of:\n *   a) The region the callable functions are located in (ex: us-central1)\n *   b) A custom domain hosting the callable functions (ex: https://mydomain.com)\n * @public\n */\nexport function getFunctions(\n  app: FirebaseApp = getApp(),\n  regionOrCustomDomain: string = DEFAULT_REGION\n): Functions {\n  updateEmulatorBanner('Functions', false);\n  // Dependencies\n  const functionsProvider: Provider<'functions'> = _getProvider(\n    getModularInstance(app),\n    FUNCTIONS_TYPE\n  );\n  const functionsInstance = functionsProvider.getImmediate({\n    identifier: regionOrCustomDomain\n  });\n  const emulator = getDefaultEmulatorHostnameAndPort('functions');\n  if (emulator) {\n    connectFunctionsEmulator(functionsInstance, ...emulator);\n  }\n  return functionsInstance;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @public\n */\nexport function connectFunctionsEmulator(\n  functionsInstance: Functions,\n  host: string,\n  port: number\n): void {\n  _connectFunctionsEmulator(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    host,\n    port\n  );\n}\n\n/**\n * Returns a reference to the callable HTTPS trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nexport function httpsCallable<\n  RequestData = unknown,\n  ResponseData = unknown,\n  StreamData = unknown\n>(\n  functionsInstance: Functions,\n  name: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData, StreamData> {\n  return _httpsCallable<RequestData, ResponseData, StreamData>(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    name,\n    options\n  );\n}\n\n/**\n * Returns a reference to the callable HTTPS trigger with the specified url.\n * @param url - The url of the trigger.\n * @public\n */\nexport function httpsCallableFromURL<\n  RequestData = unknown,\n  ResponseData = unknown,\n  StreamData = unknown\n>(\n  functionsInstance: Functions,\n  url: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData, StreamData> {\n  return _httpsCallableFromURL<RequestData, ResponseData, StreamData>(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    url,\n    options\n  );\n}\n","// File: src/sections/@dashboard/app/ServiceRequestForm.js\nimport { useEffect, useState } from 'react';\nimport { get } from 'lodash';\nimport ReactGA from 'react-ga';\nimport moment from 'moment';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Stack,\n  TextField,\n  Snackbar,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Alert,\n} from '@mui/material';\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport { LoadingButton } from '@mui/lab';\nimport { doc, addDoc, updateDoc, collection, serverTimestamp } from 'firebase/firestore';\nimport notificationManager from '../../../actions/NotificationManager';\nimport { auth, db } from '../../../actions/firebase';\n\nexport default function ServiceRequestForm({\n  closeDialog,\n  serviceRequest,\n  serviceProvider,\n  isServiceProvider = false,\n}) {\n  const navigate = useNavigate();\n  const formProps = useForm({ defaultValues: serviceRequest || {} });\n  const { register, setValue, handleSubmit } = formProps;\n  const [date, setDate] = useState(\n    get(serviceRequest, 'date_and_time') ? new Date(get(serviceRequest, 'date_and_time')) : null\n  );\n  const [submissionLoading, setSubmissionLoading] = useState(false);\n  const [openSuccess, setOpenSuccess] = useState(false);\n  const [actionDialog, setActionDialog] = useState(null);\n  const [actionReason, setActionReason] = useState('');\n\n  useEffect(() => {\n    if (serviceProvider) {\n      setValue('serviceProvider', serviceProvider.ref || serviceProvider.id);\n    }\n  }, [serviceProvider, setValue]);\n\n  const isFinalized = serviceRequest?.status === 'Accepted' || serviceRequest?.status === 'Cancelled';\n\n  const handleDateTimeChange = newDate => {\n    setDate(newDate?.toDate ? newDate.toDate() : newDate);\n    setValue('date_and_time', newDate?.toDate ? newDate.toDate() : newDate);\n  };\n\n  const onSubmit = async values => {\n    if (isFinalized) return;\n    try {\n      setSubmissionLoading(true);\n\n      ReactGA.event({\n        value: 1,\n        category: 'Service Requests',\n        action: serviceRequest ? 'Service Request updated' : 'Service Request created',\n      });\n\n      const user = auth.currentUser;\n      if (!user) {\n        notificationManager.error('User is not authenticated.', 'Error');\n        return;\n      }\n\n      if (!values.serviceProvider) {\n        notificationManager.error('Service Provider is required.', 'Error');\n        return;\n      }\n\n      if (!date) {\n        notificationManager.error('Please select a valid date and time.', 'Error');\n        return;\n      }\n\n      const safeDate = date.toDate ? date.toDate() : date;\n\n      if (serviceRequest?.id) {\n        const requestRef = doc(db, 'serviceRequests', serviceRequest.id);\n        await updateDoc(requestRef, {\n          ...values,\n          date_and_time: safeDate,\n          updatedAt: serverTimestamp(),\n        });\n      } else {\n        const requestsCollection = collection(db, 'serviceRequests');\n        const requestDoc = await addDoc(requestsCollection, {\n          ...values,\n          date_and_time: safeDate,\n          createdAt: serverTimestamp(),\n          status: 'Pending',\n          customer: user.uid,\n        });\n\n        const userNotifRef = collection(db, 'users', user.uid, 'notifications');\n        await addDoc(userNotifRef, {\n          title: 'Service Request Created',\n          message: 'Your new service request has been submitted.',\n          type: 'service_request',\n          createdAt: serverTimestamp(),\n          read: false,\n        });\n\n        const providerNotifRef = collection(db, 'users', values.serviceProvider, 'notifications');\n        await addDoc(providerNotifRef, {\n          title: 'New Service Request',\n          message: `${user.displayName || 'A user'} has sent you a new service request.`,\n          type: 'service_request',\n          createdAt: serverTimestamp(),\n          read: false,\n        });\n      }\n\n      setOpenSuccess(true);\n      closeDialog?.();\n    } catch (error) {\n      notificationManager.error('Something went wrong while submitting the request.', 'Error');\n    } finally {\n      setSubmissionLoading(false);\n    }\n  };\n\n  const handleAction = async status => {\n    try {\n      const user = auth.currentUser;\n      const requestRef = doc(db, 'serviceRequests', serviceRequest.id);\n      await updateDoc(requestRef, {\n        status,\n        ...(actionReason && { reason: actionReason }),\n        statusUpdatedAt: serverTimestamp(),\n        statusUpdatedBy: user?.uid || null,\n        updatedAt: serverTimestamp(),\n      });\n      // Log action to serviceRequests/{id}/logs\n      const logRef = collection(db, 'serviceRequests', serviceRequest.id, 'logs');\n      await addDoc(logRef, {\n        action: status,\n        message: actionReason || `Status changed to ${status}`,\n        performedBy: user?.uid || null,\n        performedAt: serverTimestamp(),\n      });\n\n      const recipient = status === 'Cancelled' ? serviceRequest.serviceProvider : serviceRequest.customer;\n      const notifRef = collection(db, 'users', recipient, 'notifications');\n      await addDoc(notifRef, {\n        title: `Service Request ${status}`,\n        message: actionReason || `The request was ${status.toLowerCase()}.`,\n        type: 'service_request',\n        createdAt: serverTimestamp(),\n        read: false,\n      });\n\n      setActionDialog(null);\n      setActionReason('');\n      notificationManager.success(`Request ${status.toLowerCase()} successfully`, 'Success');\n    } catch (error) {\n      notificationManager.error('Failed to process the request.', 'Error');\n    }\n  };\n\n  return (\n    <>\n      {isFinalized && (\n        <Alert severity=\"info\" sx={{ mb: 2 }}>\n          This request has been <strong>{serviceRequest?.status}</strong>\n          {serviceRequest?.reason ? ` — ${serviceRequest.reason}` : ''}\n          {serviceRequest?.statusUpdatedAt?.toDate && (\n            <>\n              {' '}\n              on <strong>{moment(serviceRequest.statusUpdatedAt.toDate()).format('lll')}</strong>\n            </>\n          )}\n          {serviceRequest?.statusUpdatedBy && (\n            <>\n              {' '}\n              by <strong>{serviceRequest.statusUpdatedBy === serviceRequest.customer ? 'customer' : 'provider'}</strong>\n            </>\n          )}\n          .\n        </Alert>\n      )}\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            required\n            label=\"Subject\"\n            disabled={isFinalized}\n            {...register('subject', { required: 'Subject is required' })}\n          />\n\n          <LocalizationProvider dateAdapter={AdapterMoment} adapterLocale=\"en-za\">\n            <DateTimePicker\n              label=\"Ideal date and time for service request\"\n              required\n              disabled={isFinalized}\n              value={date}\n              onChange={handleDateTimeChange}\n              renderInput={params => <TextField {...params} />}\n            />\n          </LocalizationProvider>\n\n          <TextField fullWidth label=\"Description (optional)\" disabled={isFinalized} {...register('description')} />\n\n          <LoadingButton\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            loading={submissionLoading}\n            variant=\"contained\"\n            disabled={isFinalized}\n          >\n            {serviceRequest?.id ? 'Update Request' : 'Send Request'}\n          </LoadingButton>\n\n          {serviceRequest?.id &&\n            !isFinalized &&\n            (isServiceProvider ? (\n              <Stack direction=\"row\" spacing={2}>\n                <Button color=\"success\" variant=\"outlined\" onClick={() => setActionDialog('Accepted')}>\n                  Approve\n                </Button>\n                <Button color=\"error\" variant=\"outlined\" onClick={() => setActionDialog('Cancelled')}>\n                  Cancel\n                </Button>\n              </Stack>\n            ) : (\n              <Button color=\"error\" variant=\"outlined\" onClick={() => setActionDialog('Cancelled')}>\n                Cancel Request\n              </Button>\n            ))}\n        </Stack>\n      </form>\n\n      <Dialog open={!!actionDialog} onClose={() => setActionDialog(null)}>\n        <DialogTitle>{actionDialog} Service Request</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {actionDialog === 'Cancelled'\n              ? 'Please provide a reason for cancelling this request.'\n              : 'You are about to approve this request.'}\n          </DialogContentText>\n          {actionDialog === 'Cancelled' && (\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"Reason\"\n              fullWidth\n              variant=\"standard\"\n              value={actionReason}\n              onChange={e => setActionReason(e.target.value)}\n            />\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setActionDialog(null)}>Close</Button>\n          <Button onClick={() => handleAction(actionDialog)} variant=\"contained\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Snackbar\n        open={openSuccess}\n        autoHideDuration={4000}\n        onClose={() => setOpenSuccess(false)}\n        message=\"Service request submitted successfully\"\n      />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport ArrowBackIosRoundedIcon from '@mui/icons-material/ArrowBackIosRounded';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', showGoBackArrow = false, meta, ...other }, ref) => (\n  <>\n    <Helmet>\n      <title>{`${title} | JUA`}</title>\n      {meta}\n    </Helmet>\n\n    <Box ref={ref} {...other}>\n      {showGoBackArrow && (\n        <ArrowBackIosRoundedIcon\n          onClick={() => window.history.go(-1)}\n          sx={{\n            top: 40,\n            left: 20,\n            cursor: 'pointer',\n            position: 'relative',\n          }}\n        />\n      )}\n      {children}\n    </Box>\n  </>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n  meta: PropTypes.node,\n};\n\nexport default Page;\n"],"names":["LONG_TYPE","UNSIGNED_LONG_TYPE","mapValues","o","f","result","key","hasOwnProperty","encode","data","Number","valueOf","isFinite","Object","prototype","toString","call","Date","toISOString","Array","isArray","map","x","Error","decode","json","value","isNaN","FUNCTIONS_TYPE","errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","FunctionsError","FirebaseError","constructor","code","message","details","super","concat","setPrototypeOf","this","_errorForResponse","status","bodyJSON","codeForHTTPStatus","description","errorJSON","error","undefined","e","ContextProvider","app","authProvider","messagingProvider","appCheckProvider","auth","messaging","appCheck","serverAppAppCheckToken","_isFirebaseServerApp","settings","appCheckToken","getImmediate","optional","get","then","getAuthToken","token","getToken","accessToken","getMessagingToken","self","Notification","permission","getAppCheckToken","limitedUseAppCheckTokens","getLimitedUseToken","getContext","authToken","messagingToken","DEFAULT_REGION","responseLineRE","FunctionsService","regionOrCustomDomain","arguments","length","fetchImpl","fetch","emulatorOrigin","contextProvider","cancelAllRequests","Promise","resolve","deleteService","url","URL","customDomain","origin","pathname","region","_delete","_url","name","projectId","options","httpsCallable$1","functionsInstance","callable","callAtURL","stream","streamAtURL","async","postJSON","body","headers","response","method","JSON","stringify","makeAuthHeaders","context","failAfterHandle","millis","timer","promise","_","reject","setTimeout","cancel","clearTimeout","failAfter","timeout","race","responseData","resultResolver","resultRejecter","signal","Symbol","asyncIterator","next","resultPromise","_a","addEventListener","rstream","reader","processLine","line","controller","match","jsonData","parse","enqueue","decoder","TextDecoder","ReadableStream","start","currentText","pump","aborted","done","read","trim","close","lines","split","pop","functionsError","createResponseStream","getReader","rreader","return","variant","_registerComponent","Component","factory","container","_ref","instanceIdentifier","getProvider","setMultipleInstances","registerVersion","version","fetchServiceRequest","requestId","_auth$currentUser","currentUid","currentUser","uid","ref","doc","db","snap","getDoc","exists","customer","serviceProvider","_objectSpread","id","err","functions","getApp","updateEmulatorBanner","_getProvider","getModularInstance","identifier","emulator","getDefaultEmulatorHostnameAndPort","host","port","useSsl","isCloudWorkstation","pingServer","connectFunctionsEmulator$1","connectFunctionsEmulator","getFunctions","yoco","window","YocoSDK","publicKey","ServiceRequest","navigate","useNavigate","serviceRequestId","useParams","serviceRequest","setServiceRequest","useState","loading","setLoading","setError","paying","setPaying","useEffect","loadRequest","isServiceProvider","isCustomer","_jsx","Page","title","children","_jsxs","Container","maxWidth","Typography","sx","mb","Button","onClick","goBack","replace","CircularProgress","Alert","severity","_Fragment","ServiceRequestForm","paymentStatus","mt","mr","disabled","amount","amountInCents","Math","round","showPopup","currency","callback","notificationManager","processPayment","tokenId","success","fee","goToServiceRequestMeeting","_serviceRequest$statu","closeDialog","formProps","useForm","defaultValues","register","setValue","handleSubmit","date","setDate","submissionLoading","setSubmissionLoading","openSuccess","setOpenSuccess","actionDialog","setActionDialog","actionReason","setActionReason","isFinalized","reason","statusUpdatedAt","toDate","moment","format","statusUpdatedBy","onSubmit","ReactGA","category","action","user","values","safeDate","requestRef","updateDoc","date_and_time","updatedAt","serverTimestamp","requestsCollection","collection","userNotifRef","addDoc","createdAt","type","providerNotifRef","displayName","Stack","spacing","TextField","fullWidth","required","label","LocalizationProvider","dateAdapter","AdapterMoment","adapterLocale","DateTimePicker","onChange","newDate","renderInput","params","LoadingButton","size","direction","color","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","autoFocus","margin","target","DialogActions","logRef","performedBy","performedAt","recipient","notifRef","toLowerCase","handleAction","Snackbar","autoHideDuration","forwardRef","showGoBackArrow","meta","other","_objectWithoutProperties","_excluded","Helmet","Box","ArrowBackIosRoundedIcon","history","go","top","left","cursor","position","propTypes","PropTypes","isRequired"],"sourceRoot":""}